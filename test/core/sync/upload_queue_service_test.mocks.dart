// Mocks generated by Mockito 5.4.6 from annotations
// in fairshare_app/test/core/sync/upload_queue_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i10;
import 'dart:typed_data' as _i21;

import 'package:cloud_firestore/cloud_firestore.dart' as _i14;
import 'package:cloud_firestore_platform_interface/cloud_firestore_platform_interface.dart'
    as _i13;
import 'package:drift/drift.dart' as _i2;
import 'package:drift/src/runtime/executor/stream_queries.dart' as _i9;
import 'package:fairshare_app/core/database/app_database.dart' as _i3;
import 'package:fairshare_app/core/database/DAOs/expense_shares_dao.dart'
    as _i7;
import 'package:fairshare_app/core/database/DAOs/expenses_dao.dart' as _i6;
import 'package:fairshare_app/core/database/DAOs/groups_dao.dart' as _i5;
import 'package:fairshare_app/core/database/DAOs/sync_dao.dart' as _i8;
import 'package:fairshare_app/core/database/DAOs/user_dao.dart' as _i4;
import 'package:fairshare_app/core/events/event_broker_interface.dart' as _i17;
import 'package:fairshare_app/core/logging/app_logger.dart' as _i11;
import 'package:fairshare_app/features/expenses/data/services/firestore_expense_service.dart'
    as _i22;
import 'package:fairshare_app/features/expenses/domain/entities/expense_entity.dart'
    as _i16;
import 'package:fairshare_app/features/expenses/domain/entities/expense_share_entity.dart'
    as _i20;
import 'package:fairshare_app/features/groups/data/services/firestore_group_service.dart'
    as _i24;
import 'package:fairshare_app/features/groups/domain/entities/group_entity.dart'
    as _i18;
import 'package:fairshare_app/features/groups/domain/entities/group_member_entity.dart'
    as _i19;
import 'package:firebase_core/firebase_core.dart' as _i12;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i15;
import 'package:result_dart/result_dart.dart' as _i23;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMigrationStrategy_0 extends _i1.SmartFake
    implements _i2.MigrationStrategy {
  _FakeMigrationStrategy_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$AppUsersTable_1 extends _i1.SmartFake
    implements _i3.$AppUsersTable {
  _Fake$AppUsersTable_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$AppGroupsTable_2 extends _i1.SmartFake
    implements _i3.$AppGroupsTable {
  _Fake$AppGroupsTable_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$AppGroupMembersTable_3 extends _i1.SmartFake
    implements _i3.$AppGroupMembersTable {
  _Fake$AppGroupMembersTable_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$AppGroupBalancesTable_4 extends _i1.SmartFake
    implements _i3.$AppGroupBalancesTable {
  _Fake$AppGroupBalancesTable_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$ExpensesTable_5 extends _i1.SmartFake
    implements _i3.$ExpensesTable {
  _Fake$ExpensesTable_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$ExpenseSharesTable_6 extends _i1.SmartFake
    implements _i3.$ExpenseSharesTable {
  _Fake$ExpenseSharesTable_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$SyncQueueTable_7 extends _i1.SmartFake
    implements _i3.$SyncQueueTable {
  _Fake$SyncQueueTable_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserDao_8 extends _i1.SmartFake implements _i4.UserDao {
  _FakeUserDao_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGroupsDao_9 extends _i1.SmartFake implements _i5.GroupsDao {
  _FakeGroupsDao_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeExpensesDao_10 extends _i1.SmartFake implements _i6.ExpensesDao {
  _FakeExpensesDao_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeExpenseSharesDao_11 extends _i1.SmartFake
    implements _i7.ExpenseSharesDao {
  _FakeExpenseSharesDao_11(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSyncDao_12 extends _i1.SmartFake implements _i8.SyncDao {
  _FakeSyncDao_12(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$AppDatabaseManager_13 extends _i1.SmartFake
    implements _i3.$AppDatabaseManager {
  _Fake$AppDatabaseManager_13(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeStreamQueryUpdateRules_14 extends _i1.SmartFake
    implements _i2.StreamQueryUpdateRules {
  _FakeStreamQueryUpdateRules_14(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDriftDatabaseOptions_15 extends _i1.SmartFake
    implements _i2.DriftDatabaseOptions {
  _FakeDriftDatabaseOptions_15(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGeneratedDatabase_16 extends _i1.SmartFake
    implements _i2.GeneratedDatabase {
  _FakeGeneratedDatabase_16(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDatabaseConnection_17 extends _i1.SmartFake
    implements _i2.DatabaseConnection {
  _FakeDatabaseConnection_17(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeQueryExecutor_18 extends _i1.SmartFake implements _i2.QueryExecutor {
  _FakeQueryExecutor_18(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeStreamQueryStore_19 extends _i1.SmartFake
    implements _i9.StreamQueryStore {
  _FakeStreamQueryStore_19(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDatabaseConnectionUser_20 extends _i1.SmartFake
    implements _i2.DatabaseConnectionUser {
  _FakeDatabaseConnectionUser_20(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMigrator_21 extends _i1.SmartFake implements _i2.Migrator {
  _FakeMigrator_21(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFuture_22<T1> extends _i1.SmartFake implements _i10.Future<T1> {
  _FakeFuture_22(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeInsertStatement_23<T1 extends _i2.Table, D1> extends _i1.SmartFake
    implements _i2.InsertStatement<T1, D1> {
  _FakeInsertStatement_23(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUpdateStatement_24<T extends _i2.Table, D> extends _i1.SmartFake
    implements _i2.UpdateStatement<T, D> {
  _FakeUpdateStatement_24(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSimpleSelectStatement_25<T1 extends _i2.HasResultSet, D>
    extends _i1.SmartFake
    implements _i2.SimpleSelectStatement<T1, D> {
  _FakeSimpleSelectStatement_25(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeJoinedSelectStatement_26<FirstT extends _i2.HasResultSet, FirstD>
    extends _i1.SmartFake
    implements _i2.JoinedSelectStatement<FirstT, FirstD> {
  _FakeJoinedSelectStatement_26(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeBaseSelectStatement_27<Row> extends _i1.SmartFake
    implements _i2.BaseSelectStatement<Row> {
  _FakeBaseSelectStatement_27(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDeleteStatement_28<T1 extends _i2.Table, D1> extends _i1.SmartFake
    implements _i2.DeleteStatement<T1, D1> {
  _FakeDeleteStatement_28(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSelectable_29<T> extends _i1.SmartFake implements _i2.Selectable<T> {
  _FakeSelectable_29(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGenerationContext_30 extends _i1.SmartFake
    implements _i2.GenerationContext {
  _FakeGenerationContext_30(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAppDatabase_31 extends _i1.SmartFake implements _i3.AppDatabase {
  _FakeAppDatabase_31(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAppLogger_32 extends _i1.SmartFake implements _i11.AppLogger {
  _FakeAppLogger_32(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFirebaseApp_33 extends _i1.SmartFake implements _i12.FirebaseApp {
  _FakeFirebaseApp_33(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSettings_34 extends _i1.SmartFake implements _i13.Settings {
  _FakeSettings_34(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeCollectionReference_35<T extends Object?> extends _i1.SmartFake
    implements _i14.CollectionReference<T> {
  _FakeCollectionReference_35(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeWriteBatch_36 extends _i1.SmartFake implements _i14.WriteBatch {
  _FakeWriteBatch_36(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLoadBundleTask_37 extends _i1.SmartFake
    implements _i14.LoadBundleTask {
  _FakeLoadBundleTask_37(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeQuerySnapshot_38<T1 extends Object?> extends _i1.SmartFake
    implements _i14.QuerySnapshot<T1> {
  _FakeQuerySnapshot_38(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeQuery_39<T extends Object?> extends _i1.SmartFake
    implements _i14.Query<T> {
  _FakeQuery_39(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDocumentReference_40<T extends Object?> extends _i1.SmartFake
    implements _i14.DocumentReference<T> {
  _FakeDocumentReference_40(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFirebaseFirestore_41 extends _i1.SmartFake
    implements _i14.FirebaseFirestore {
  _FakeFirebaseFirestore_41(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAggregateQuery_42 extends _i1.SmartFake
    implements _i14.AggregateQuery {
  _FakeAggregateQuery_42(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDocumentSnapshot_43<T1 extends Object?> extends _i1.SmartFake
    implements _i14.DocumentSnapshot<T1> {
  _FakeDocumentSnapshot_43(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSnapshotMetadata_44 extends _i1.SmartFake
    implements _i14.SnapshotMetadata {
  _FakeSnapshotMetadata_44(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AppDatabase].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppDatabase extends _i1.Mock implements _i3.AppDatabase {
  MockAppDatabase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get schemaVersion =>
      (super.noSuchMethod(Invocation.getter(#schemaVersion), returnValue: 0)
          as int);

  @override
  _i2.MigrationStrategy get migration =>
      (super.noSuchMethod(
            Invocation.getter(#migration),
            returnValue: _FakeMigrationStrategy_0(
              this,
              Invocation.getter(#migration),
            ),
          )
          as _i2.MigrationStrategy);

  @override
  _i3.$AppUsersTable get appUsers =>
      (super.noSuchMethod(
            Invocation.getter(#appUsers),
            returnValue: _Fake$AppUsersTable_1(
              this,
              Invocation.getter(#appUsers),
            ),
          )
          as _i3.$AppUsersTable);

  @override
  _i3.$AppGroupsTable get appGroups =>
      (super.noSuchMethod(
            Invocation.getter(#appGroups),
            returnValue: _Fake$AppGroupsTable_2(
              this,
              Invocation.getter(#appGroups),
            ),
          )
          as _i3.$AppGroupsTable);

  @override
  _i3.$AppGroupMembersTable get appGroupMembers =>
      (super.noSuchMethod(
            Invocation.getter(#appGroupMembers),
            returnValue: _Fake$AppGroupMembersTable_3(
              this,
              Invocation.getter(#appGroupMembers),
            ),
          )
          as _i3.$AppGroupMembersTable);

  @override
  _i3.$AppGroupBalancesTable get appGroupBalances =>
      (super.noSuchMethod(
            Invocation.getter(#appGroupBalances),
            returnValue: _Fake$AppGroupBalancesTable_4(
              this,
              Invocation.getter(#appGroupBalances),
            ),
          )
          as _i3.$AppGroupBalancesTable);

  @override
  _i3.$ExpensesTable get expenses =>
      (super.noSuchMethod(
            Invocation.getter(#expenses),
            returnValue: _Fake$ExpensesTable_5(
              this,
              Invocation.getter(#expenses),
            ),
          )
          as _i3.$ExpensesTable);

  @override
  _i3.$ExpenseSharesTable get expenseShares =>
      (super.noSuchMethod(
            Invocation.getter(#expenseShares),
            returnValue: _Fake$ExpenseSharesTable_6(
              this,
              Invocation.getter(#expenseShares),
            ),
          )
          as _i3.$ExpenseSharesTable);

  @override
  _i3.$SyncQueueTable get syncQueue =>
      (super.noSuchMethod(
            Invocation.getter(#syncQueue),
            returnValue: _Fake$SyncQueueTable_7(
              this,
              Invocation.getter(#syncQueue),
            ),
          )
          as _i3.$SyncQueueTable);

  @override
  _i4.UserDao get userDao =>
      (super.noSuchMethod(
            Invocation.getter(#userDao),
            returnValue: _FakeUserDao_8(this, Invocation.getter(#userDao)),
          )
          as _i4.UserDao);

  @override
  _i5.GroupsDao get groupsDao =>
      (super.noSuchMethod(
            Invocation.getter(#groupsDao),
            returnValue: _FakeGroupsDao_9(this, Invocation.getter(#groupsDao)),
          )
          as _i5.GroupsDao);

  @override
  _i6.ExpensesDao get expensesDao =>
      (super.noSuchMethod(
            Invocation.getter(#expensesDao),
            returnValue: _FakeExpensesDao_10(
              this,
              Invocation.getter(#expensesDao),
            ),
          )
          as _i6.ExpensesDao);

  @override
  _i7.ExpenseSharesDao get expenseSharesDao =>
      (super.noSuchMethod(
            Invocation.getter(#expenseSharesDao),
            returnValue: _FakeExpenseSharesDao_11(
              this,
              Invocation.getter(#expenseSharesDao),
            ),
          )
          as _i7.ExpenseSharesDao);

  @override
  _i8.SyncDao get syncDao =>
      (super.noSuchMethod(
            Invocation.getter(#syncDao),
            returnValue: _FakeSyncDao_12(this, Invocation.getter(#syncDao)),
          )
          as _i8.SyncDao);

  @override
  _i3.$AppDatabaseManager get managers =>
      (super.noSuchMethod(
            Invocation.getter(#managers),
            returnValue: _Fake$AppDatabaseManager_13(
              this,
              Invocation.getter(#managers),
            ),
          )
          as _i3.$AppDatabaseManager);

  @override
  Iterable<_i2.TableInfo<_i2.Table, Object?>> get allTables =>
      (super.noSuchMethod(
            Invocation.getter(#allTables),
            returnValue: <_i2.TableInfo<_i2.Table, Object?>>[],
          )
          as Iterable<_i2.TableInfo<_i2.Table, Object?>>);

  @override
  List<_i2.DatabaseSchemaEntity> get allSchemaEntities =>
      (super.noSuchMethod(
            Invocation.getter(#allSchemaEntities),
            returnValue: <_i2.DatabaseSchemaEntity>[],
          )
          as List<_i2.DatabaseSchemaEntity>);

  @override
  _i2.StreamQueryUpdateRules get streamUpdateRules =>
      (super.noSuchMethod(
            Invocation.getter(#streamUpdateRules),
            returnValue: _FakeStreamQueryUpdateRules_14(
              this,
              Invocation.getter(#streamUpdateRules),
            ),
          )
          as _i2.StreamQueryUpdateRules);

  @override
  _i2.DriftDatabaseOptions get options =>
      (super.noSuchMethod(
            Invocation.getter(#options),
            returnValue: _FakeDriftDatabaseOptions_15(
              this,
              Invocation.getter(#options),
            ),
          )
          as _i2.DriftDatabaseOptions);

  @override
  _i2.GeneratedDatabase get attachedDatabase =>
      (super.noSuchMethod(
            Invocation.getter(#attachedDatabase),
            returnValue: _FakeGeneratedDatabase_16(
              this,
              Invocation.getter(#attachedDatabase),
            ),
          )
          as _i2.GeneratedDatabase);

  @override
  _i2.DatabaseConnection get connection =>
      (super.noSuchMethod(
            Invocation.getter(#connection),
            returnValue: _FakeDatabaseConnection_17(
              this,
              Invocation.getter(#connection),
            ),
          )
          as _i2.DatabaseConnection);

  @override
  _i2.SqlTypes get typeMapping =>
      (super.noSuchMethod(
            Invocation.getter(#typeMapping),
            returnValue: _i15.dummyValue<_i2.SqlTypes>(
              this,
              Invocation.getter(#typeMapping),
            ),
          )
          as _i2.SqlTypes);

  @override
  _i2.QueryExecutor get executor =>
      (super.noSuchMethod(
            Invocation.getter(#executor),
            returnValue: _FakeQueryExecutor_18(
              this,
              Invocation.getter(#executor),
            ),
          )
          as _i2.QueryExecutor);

  @override
  _i9.StreamQueryStore get streamQueries =>
      (super.noSuchMethod(
            Invocation.getter(#streamQueries),
            returnValue: _FakeStreamQueryStore_19(
              this,
              Invocation.getter(#streamQueries),
            ),
          )
          as _i9.StreamQueryStore);

  @override
  _i2.DatabaseConnectionUser get resolvedEngine =>
      (super.noSuchMethod(
            Invocation.getter(#resolvedEngine),
            returnValue: _FakeDatabaseConnectionUser_20(
              this,
              Invocation.getter(#resolvedEngine),
            ),
          )
          as _i2.DatabaseConnectionUser);

  @override
  _i2.Migrator createMigrator() =>
      (super.noSuchMethod(
            Invocation.method(#createMigrator, []),
            returnValue: _FakeMigrator_21(
              this,
              Invocation.method(#createMigrator, []),
            ),
          )
          as _i2.Migrator);

  @override
  _i10.Future<void> beforeOpen(
    _i2.QueryExecutor? executor,
    _i2.OpeningDetails? details,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#beforeOpen, [executor, details]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<void> close() =>
      (super.noSuchMethod(
            Invocation.method(#close, []),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Stream<T> createStream<T extends Object>(
    _i9.QueryStreamFetcher<T>? stmt,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createStream, [stmt]),
            returnValue: _i10.Stream<T>.empty(),
          )
          as _i10.Stream<T>);

  @override
  T alias<T, D>(_i2.ResultSetImplementation<T, D>? table, String? alias) =>
      (super.noSuchMethod(
            Invocation.method(#alias, [table, alias]),
            returnValue: _i15.dummyValue<T>(
              this,
              Invocation.method(#alias, [table, alias]),
            ),
          )
          as T);

  @override
  void markTablesUpdated(Iterable<_i2.TableInfo<_i2.Table, dynamic>>? tables) =>
      super.noSuchMethod(
        Invocation.method(#markTablesUpdated, [tables]),
        returnValueForMissingStub: null,
      );

  @override
  void notifyUpdates(Set<_i2.TableUpdate>? updates) => super.noSuchMethod(
    Invocation.method(#notifyUpdates, [updates]),
    returnValueForMissingStub: null,
  );

  @override
  _i10.Stream<Set<_i2.TableUpdate>> tableUpdates([
    _i2.TableUpdateQuery? query = const _i2.TableUpdateQuery.any(),
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#tableUpdates, [query]),
            returnValue: _i10.Stream<Set<_i2.TableUpdate>>.empty(),
          )
          as _i10.Stream<Set<_i2.TableUpdate>>);

  @override
  _i10.Future<T> doWhenOpened<T>(
    _i10.FutureOr<T> Function(_i2.QueryExecutor)? fn,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#doWhenOpened, [fn]),
            returnValue:
                _i15.ifNotNull(
                  _i15.dummyValueOrNull<T>(
                    this,
                    Invocation.method(#doWhenOpened, [fn]),
                  ),
                  (T v) => _i10.Future<T>.value(v),
                ) ??
                _FakeFuture_22<T>(this, Invocation.method(#doWhenOpened, [fn])),
          )
          as _i10.Future<T>);

  @override
  _i2.InsertStatement<T, D> into<T extends _i2.Table, D>(
    _i2.TableInfo<T, D>? table,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#into, [table]),
            returnValue: _FakeInsertStatement_23<T, D>(
              this,
              Invocation.method(#into, [table]),
            ),
          )
          as _i2.InsertStatement<T, D>);

  @override
  _i2.UpdateStatement<Tbl, R> update<Tbl extends _i2.Table, R>(
    _i2.TableInfo<Tbl, R>? table,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#update, [table]),
            returnValue: _FakeUpdateStatement_24<Tbl, R>(
              this,
              Invocation.method(#update, [table]),
            ),
          )
          as _i2.UpdateStatement<Tbl, R>);

  @override
  _i2.SimpleSelectStatement<T, R> select<T extends _i2.HasResultSet, R>(
    _i2.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#select, [table], {#distinct: distinct}),
            returnValue: _FakeSimpleSelectStatement_25<T, R>(
              this,
              Invocation.method(#select, [table], {#distinct: distinct}),
            ),
          )
          as _i2.SimpleSelectStatement<T, R>);

  @override
  _i2.JoinedSelectStatement<T, R> selectOnly<T extends _i2.HasResultSet, R>(
    _i2.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#selectOnly, [table], {#distinct: distinct}),
            returnValue: _FakeJoinedSelectStatement_26<T, R>(
              this,
              Invocation.method(#selectOnly, [table], {#distinct: distinct}),
            ),
          )
          as _i2.JoinedSelectStatement<T, R>);

  @override
  _i2.BaseSelectStatement<_i2.TypedResult> selectExpressions(
    Iterable<_i2.Expression<Object>>? columns,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#selectExpressions, [columns]),
            returnValue: _FakeBaseSelectStatement_27<_i2.TypedResult>(
              this,
              Invocation.method(#selectExpressions, [columns]),
            ),
          )
          as _i2.BaseSelectStatement<_i2.TypedResult>);

  @override
  _i2.DeleteStatement<T, D> delete<T extends _i2.Table, D>(
    _i2.TableInfo<T, D>? table,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [table]),
            returnValue: _FakeDeleteStatement_28<T, D>(
              this,
              Invocation.method(#delete, [table]),
            ),
          )
          as _i2.DeleteStatement<T, D>);

  @override
  _i10.Future<int> customUpdate(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i2.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customUpdate,
              [query],
              {
                #variables: variables,
                #updates: updates,
                #updateKind: updateKind,
              },
            ),
            returnValue: _i10.Future<int>.value(0),
          )
          as _i10.Future<int>);

  @override
  _i10.Future<int> customInsert(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customInsert,
              [query],
              {#variables: variables, #updates: updates},
            ),
            returnValue: _i10.Future<int>.value(0),
          )
          as _i10.Future<int>);

  @override
  _i10.Future<List<_i2.QueryRow>> customWriteReturning(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i2.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customWriteReturning,
              [query],
              {
                #variables: variables,
                #updates: updates,
                #updateKind: updateKind,
              },
            ),
            returnValue: _i10.Future<List<_i2.QueryRow>>.value(
              <_i2.QueryRow>[],
            ),
          )
          as _i10.Future<List<_i2.QueryRow>>);

  @override
  _i2.Selectable<_i2.QueryRow> customSelect(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customSelect,
              [query],
              {#variables: variables, #readsFrom: readsFrom},
            ),
            returnValue: _FakeSelectable_29<_i2.QueryRow>(
              this,
              Invocation.method(
                #customSelect,
                [query],
                {#variables: variables, #readsFrom: readsFrom},
              ),
            ),
          )
          as _i2.Selectable<_i2.QueryRow>);

  @override
  _i2.Selectable<_i2.QueryRow> customSelectQuery(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customSelectQuery,
              [query],
              {#variables: variables, #readsFrom: readsFrom},
            ),
            returnValue: _FakeSelectable_29<_i2.QueryRow>(
              this,
              Invocation.method(
                #customSelectQuery,
                [query],
                {#variables: variables, #readsFrom: readsFrom},
              ),
            ),
          )
          as _i2.Selectable<_i2.QueryRow>);

  @override
  _i10.Future<void> customStatement(String? statement, [List<dynamic>? args]) =>
      (super.noSuchMethod(
            Invocation.method(#customStatement, [statement, args]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<T> transaction<T>(
    _i10.Future<T> Function()? action, {
    bool? requireNew = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #transaction,
              [action],
              {#requireNew: requireNew},
            ),
            returnValue:
                _i15.ifNotNull(
                  _i15.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #transaction,
                      [action],
                      {#requireNew: requireNew},
                    ),
                  ),
                  (T v) => _i10.Future<T>.value(v),
                ) ??
                _FakeFuture_22<T>(
                  this,
                  Invocation.method(
                    #transaction,
                    [action],
                    {#requireNew: requireNew},
                  ),
                ),
          )
          as _i10.Future<T>);

  @override
  _i10.Future<T> exclusively<T>(_i10.Future<T> Function()? action) =>
      (super.noSuchMethod(
            Invocation.method(#exclusively, [action]),
            returnValue:
                _i15.ifNotNull(
                  _i15.dummyValueOrNull<T>(
                    this,
                    Invocation.method(#exclusively, [action]),
                  ),
                  (T v) => _i10.Future<T>.value(v),
                ) ??
                _FakeFuture_22<T>(
                  this,
                  Invocation.method(#exclusively, [action]),
                ),
          )
          as _i10.Future<T>);

  @override
  _i10.Future<void> batch(
    _i10.FutureOr<void> Function(_i2.Batch)? runInBatch,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#batch, [runInBatch]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<T> runWithInterceptor<T>(
    _i10.Future<T> Function()? action, {
    required _i2.QueryInterceptor? interceptor,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #runWithInterceptor,
              [action],
              {#interceptor: interceptor},
            ),
            returnValue:
                _i15.ifNotNull(
                  _i15.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #runWithInterceptor,
                      [action],
                      {#interceptor: interceptor},
                    ),
                  ),
                  (T v) => _i10.Future<T>.value(v),
                ) ??
                _FakeFuture_22<T>(
                  this,
                  Invocation.method(
                    #runWithInterceptor,
                    [action],
                    {#interceptor: interceptor},
                  ),
                ),
          )
          as _i10.Future<T>);

  @override
  _i2.GenerationContext $write(
    _i2.Component? component, {
    bool? hasMultipleTables,
    int? startIndex,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #$write,
              [component],
              {#hasMultipleTables: hasMultipleTables, #startIndex: startIndex},
            ),
            returnValue: _FakeGenerationContext_30(
              this,
              Invocation.method(
                #$write,
                [component],
                {
                  #hasMultipleTables: hasMultipleTables,
                  #startIndex: startIndex,
                },
              ),
            ),
          )
          as _i2.GenerationContext);

  @override
  _i2.GenerationContext $writeInsertable(
    _i2.TableInfo<_i2.Table, dynamic>? table,
    _i2.Insertable<dynamic>? insertable, {
    int? startIndex,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #$writeInsertable,
              [table, insertable],
              {#startIndex: startIndex},
            ),
            returnValue: _FakeGenerationContext_30(
              this,
              Invocation.method(
                #$writeInsertable,
                [table, insertable],
                {#startIndex: startIndex},
              ),
            ),
          )
          as _i2.GenerationContext);

  @override
  String $expandVar(int? start, int? amount) =>
      (super.noSuchMethod(
            Invocation.method(#$expandVar, [start, amount]),
            returnValue: _i15.dummyValue<String>(
              this,
              Invocation.method(#$expandVar, [start, amount]),
            ),
          )
          as String);
}

/// A class which mocks [SyncDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockSyncDao extends _i1.Mock implements _i8.SyncDao {
  MockSyncDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.AppDatabase get db =>
      (super.noSuchMethod(
            Invocation.getter(#db),
            returnValue: _FakeAppDatabase_31(this, Invocation.getter(#db)),
          )
          as _i3.AppDatabase);

  @override
  _i3.AppDatabase get attachedDatabase =>
      (super.noSuchMethod(
            Invocation.getter(#attachedDatabase),
            returnValue: _FakeAppDatabase_31(
              this,
              Invocation.getter(#attachedDatabase),
            ),
          )
          as _i3.AppDatabase);

  @override
  _i2.DatabaseConnection get connection =>
      (super.noSuchMethod(
            Invocation.getter(#connection),
            returnValue: _FakeDatabaseConnection_17(
              this,
              Invocation.getter(#connection),
            ),
          )
          as _i2.DatabaseConnection);

  @override
  _i2.SqlTypes get typeMapping =>
      (super.noSuchMethod(
            Invocation.getter(#typeMapping),
            returnValue: _i15.dummyValue<_i2.SqlTypes>(
              this,
              Invocation.getter(#typeMapping),
            ),
          )
          as _i2.SqlTypes);

  @override
  _i2.DriftDatabaseOptions get options =>
      (super.noSuchMethod(
            Invocation.getter(#options),
            returnValue: _FakeDriftDatabaseOptions_15(
              this,
              Invocation.getter(#options),
            ),
          )
          as _i2.DriftDatabaseOptions);

  @override
  _i2.QueryExecutor get executor =>
      (super.noSuchMethod(
            Invocation.getter(#executor),
            returnValue: _FakeQueryExecutor_18(
              this,
              Invocation.getter(#executor),
            ),
          )
          as _i2.QueryExecutor);

  @override
  _i9.StreamQueryStore get streamQueries =>
      (super.noSuchMethod(
            Invocation.getter(#streamQueries),
            returnValue: _FakeStreamQueryStore_19(
              this,
              Invocation.getter(#streamQueries),
            ),
          )
          as _i9.StreamQueryStore);

  @override
  _i2.DatabaseConnectionUser get resolvedEngine =>
      (super.noSuchMethod(
            Invocation.getter(#resolvedEngine),
            returnValue: _FakeDatabaseConnectionUser_20(
              this,
              Invocation.getter(#resolvedEngine),
            ),
          )
          as _i2.DatabaseConnectionUser);

  @override
  _i3.$AppUsersTable get appUsers =>
      (super.noSuchMethod(
            Invocation.getter(#appUsers),
            returnValue: _Fake$AppUsersTable_1(
              this,
              Invocation.getter(#appUsers),
            ),
          )
          as _i3.$AppUsersTable);

  @override
  _i3.$SyncQueueTable get syncQueue =>
      (super.noSuchMethod(
            Invocation.getter(#syncQueue),
            returnValue: _Fake$SyncQueueTable_7(
              this,
              Invocation.getter(#syncQueue),
            ),
          )
          as _i3.$SyncQueueTable);

  @override
  _i11.AppLogger get log =>
      (super.noSuchMethod(
            Invocation.getter(#log),
            returnValue: _FakeAppLogger_32(this, Invocation.getter(#log)),
          )
          as _i11.AppLogger);

  @override
  _i10.Future<void> enqueueOperation({
    required String? ownerId,
    required String? entityType,
    required String? entityId,
    required String? operationType,
    String? metadata,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#enqueueOperation, [], {
              #ownerId: ownerId,
              #entityType: entityType,
              #entityId: entityId,
              #operationType: operationType,
              #metadata: metadata,
            }),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<List<_i3.SyncQueueData>> getPendingOperations({
    required String? ownerId,
    int? limit,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getPendingOperations, [], {
              #ownerId: ownerId,
              #limit: limit,
            }),
            returnValue: _i10.Future<List<_i3.SyncQueueData>>.value(
              <_i3.SyncQueueData>[],
            ),
          )
          as _i10.Future<List<_i3.SyncQueueData>>);

  @override
  _i10.Future<void> removeQueuedOperation(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#removeQueuedOperation, [id]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<void> markOperationFailed(int? id, String? errorMessage) =>
      (super.noSuchMethod(
            Invocation.method(#markOperationFailed, [id, errorMessage]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<int> getPendingOperationCount(String? ownerId) =>
      (super.noSuchMethod(
            Invocation.method(#getPendingOperationCount, [ownerId]),
            returnValue: _i10.Future<int>.value(0),
          )
          as _i10.Future<int>);

  @override
  _i10.Stream<T> createStream<T extends Object>(
    _i9.QueryStreamFetcher<T>? stmt,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createStream, [stmt]),
            returnValue: _i10.Stream<T>.empty(),
          )
          as _i10.Stream<T>);

  @override
  T alias<T, D>(_i2.ResultSetImplementation<T, D>? table, String? alias) =>
      (super.noSuchMethod(
            Invocation.method(#alias, [table, alias]),
            returnValue: _i15.dummyValue<T>(
              this,
              Invocation.method(#alias, [table, alias]),
            ),
          )
          as T);

  @override
  void markTablesUpdated(Iterable<_i2.TableInfo<_i2.Table, dynamic>>? tables) =>
      super.noSuchMethod(
        Invocation.method(#markTablesUpdated, [tables]),
        returnValueForMissingStub: null,
      );

  @override
  void notifyUpdates(Set<_i2.TableUpdate>? updates) => super.noSuchMethod(
    Invocation.method(#notifyUpdates, [updates]),
    returnValueForMissingStub: null,
  );

  @override
  _i10.Stream<Set<_i2.TableUpdate>> tableUpdates([
    _i2.TableUpdateQuery? query = const _i2.TableUpdateQuery.any(),
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#tableUpdates, [query]),
            returnValue: _i10.Stream<Set<_i2.TableUpdate>>.empty(),
          )
          as _i10.Stream<Set<_i2.TableUpdate>>);

  @override
  _i10.Future<T> doWhenOpened<T>(
    _i10.FutureOr<T> Function(_i2.QueryExecutor)? fn,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#doWhenOpened, [fn]),
            returnValue:
                _i15.ifNotNull(
                  _i15.dummyValueOrNull<T>(
                    this,
                    Invocation.method(#doWhenOpened, [fn]),
                  ),
                  (T v) => _i10.Future<T>.value(v),
                ) ??
                _FakeFuture_22<T>(this, Invocation.method(#doWhenOpened, [fn])),
          )
          as _i10.Future<T>);

  @override
  _i2.InsertStatement<T, D> into<T extends _i2.Table, D>(
    _i2.TableInfo<T, D>? table,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#into, [table]),
            returnValue: _FakeInsertStatement_23<T, D>(
              this,
              Invocation.method(#into, [table]),
            ),
          )
          as _i2.InsertStatement<T, D>);

  @override
  _i2.UpdateStatement<Tbl, R> update<Tbl extends _i2.Table, R>(
    _i2.TableInfo<Tbl, R>? table,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#update, [table]),
            returnValue: _FakeUpdateStatement_24<Tbl, R>(
              this,
              Invocation.method(#update, [table]),
            ),
          )
          as _i2.UpdateStatement<Tbl, R>);

  @override
  _i2.SimpleSelectStatement<T, R> select<T extends _i2.HasResultSet, R>(
    _i2.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#select, [table], {#distinct: distinct}),
            returnValue: _FakeSimpleSelectStatement_25<T, R>(
              this,
              Invocation.method(#select, [table], {#distinct: distinct}),
            ),
          )
          as _i2.SimpleSelectStatement<T, R>);

  @override
  _i2.JoinedSelectStatement<T, R> selectOnly<T extends _i2.HasResultSet, R>(
    _i2.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#selectOnly, [table], {#distinct: distinct}),
            returnValue: _FakeJoinedSelectStatement_26<T, R>(
              this,
              Invocation.method(#selectOnly, [table], {#distinct: distinct}),
            ),
          )
          as _i2.JoinedSelectStatement<T, R>);

  @override
  _i2.BaseSelectStatement<_i2.TypedResult> selectExpressions(
    Iterable<_i2.Expression<Object>>? columns,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#selectExpressions, [columns]),
            returnValue: _FakeBaseSelectStatement_27<_i2.TypedResult>(
              this,
              Invocation.method(#selectExpressions, [columns]),
            ),
          )
          as _i2.BaseSelectStatement<_i2.TypedResult>);

  @override
  _i2.DeleteStatement<T, D> delete<T extends _i2.Table, D>(
    _i2.TableInfo<T, D>? table,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [table]),
            returnValue: _FakeDeleteStatement_28<T, D>(
              this,
              Invocation.method(#delete, [table]),
            ),
          )
          as _i2.DeleteStatement<T, D>);

  @override
  _i10.Future<int> customUpdate(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i2.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customUpdate,
              [query],
              {
                #variables: variables,
                #updates: updates,
                #updateKind: updateKind,
              },
            ),
            returnValue: _i10.Future<int>.value(0),
          )
          as _i10.Future<int>);

  @override
  _i10.Future<int> customInsert(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customInsert,
              [query],
              {#variables: variables, #updates: updates},
            ),
            returnValue: _i10.Future<int>.value(0),
          )
          as _i10.Future<int>);

  @override
  _i10.Future<List<_i2.QueryRow>> customWriteReturning(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i2.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customWriteReturning,
              [query],
              {
                #variables: variables,
                #updates: updates,
                #updateKind: updateKind,
              },
            ),
            returnValue: _i10.Future<List<_i2.QueryRow>>.value(
              <_i2.QueryRow>[],
            ),
          )
          as _i10.Future<List<_i2.QueryRow>>);

  @override
  _i2.Selectable<_i2.QueryRow> customSelect(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customSelect,
              [query],
              {#variables: variables, #readsFrom: readsFrom},
            ),
            returnValue: _FakeSelectable_29<_i2.QueryRow>(
              this,
              Invocation.method(
                #customSelect,
                [query],
                {#variables: variables, #readsFrom: readsFrom},
              ),
            ),
          )
          as _i2.Selectable<_i2.QueryRow>);

  @override
  _i2.Selectable<_i2.QueryRow> customSelectQuery(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customSelectQuery,
              [query],
              {#variables: variables, #readsFrom: readsFrom},
            ),
            returnValue: _FakeSelectable_29<_i2.QueryRow>(
              this,
              Invocation.method(
                #customSelectQuery,
                [query],
                {#variables: variables, #readsFrom: readsFrom},
              ),
            ),
          )
          as _i2.Selectable<_i2.QueryRow>);

  @override
  _i10.Future<void> customStatement(String? statement, [List<dynamic>? args]) =>
      (super.noSuchMethod(
            Invocation.method(#customStatement, [statement, args]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<T> transaction<T>(
    _i10.Future<T> Function()? action, {
    bool? requireNew = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #transaction,
              [action],
              {#requireNew: requireNew},
            ),
            returnValue:
                _i15.ifNotNull(
                  _i15.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #transaction,
                      [action],
                      {#requireNew: requireNew},
                    ),
                  ),
                  (T v) => _i10.Future<T>.value(v),
                ) ??
                _FakeFuture_22<T>(
                  this,
                  Invocation.method(
                    #transaction,
                    [action],
                    {#requireNew: requireNew},
                  ),
                ),
          )
          as _i10.Future<T>);

  @override
  _i10.Future<T> exclusively<T>(_i10.Future<T> Function()? action) =>
      (super.noSuchMethod(
            Invocation.method(#exclusively, [action]),
            returnValue:
                _i15.ifNotNull(
                  _i15.dummyValueOrNull<T>(
                    this,
                    Invocation.method(#exclusively, [action]),
                  ),
                  (T v) => _i10.Future<T>.value(v),
                ) ??
                _FakeFuture_22<T>(
                  this,
                  Invocation.method(#exclusively, [action]),
                ),
          )
          as _i10.Future<T>);

  @override
  _i10.Future<void> batch(
    _i10.FutureOr<void> Function(_i2.Batch)? runInBatch,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#batch, [runInBatch]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<T> runWithInterceptor<T>(
    _i10.Future<T> Function()? action, {
    required _i2.QueryInterceptor? interceptor,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #runWithInterceptor,
              [action],
              {#interceptor: interceptor},
            ),
            returnValue:
                _i15.ifNotNull(
                  _i15.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #runWithInterceptor,
                      [action],
                      {#interceptor: interceptor},
                    ),
                  ),
                  (T v) => _i10.Future<T>.value(v),
                ) ??
                _FakeFuture_22<T>(
                  this,
                  Invocation.method(
                    #runWithInterceptor,
                    [action],
                    {#interceptor: interceptor},
                  ),
                ),
          )
          as _i10.Future<T>);

  @override
  _i2.GenerationContext $write(
    _i2.Component? component, {
    bool? hasMultipleTables,
    int? startIndex,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #$write,
              [component],
              {#hasMultipleTables: hasMultipleTables, #startIndex: startIndex},
            ),
            returnValue: _FakeGenerationContext_30(
              this,
              Invocation.method(
                #$write,
                [component],
                {
                  #hasMultipleTables: hasMultipleTables,
                  #startIndex: startIndex,
                },
              ),
            ),
          )
          as _i2.GenerationContext);

  @override
  _i2.GenerationContext $writeInsertable(
    _i2.TableInfo<_i2.Table, dynamic>? table,
    _i2.Insertable<dynamic>? insertable, {
    int? startIndex,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #$writeInsertable,
              [table, insertable],
              {#startIndex: startIndex},
            ),
            returnValue: _FakeGenerationContext_30(
              this,
              Invocation.method(
                #$writeInsertable,
                [table, insertable],
                {#startIndex: startIndex},
              ),
            ),
          )
          as _i2.GenerationContext);

  @override
  String $expandVar(int? start, int? amount) =>
      (super.noSuchMethod(
            Invocation.method(#$expandVar, [start, amount]),
            returnValue: _i15.dummyValue<String>(
              this,
              Invocation.method(#$expandVar, [start, amount]),
            ),
          )
          as String);

  @override
  _i10.Future<void> close() =>
      (super.noSuchMethod(
            Invocation.method(#close, []),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);
}

/// A class which mocks [ExpensesDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockExpensesDao extends _i1.Mock implements _i6.ExpensesDao {
  MockExpensesDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.AppDatabase get db =>
      (super.noSuchMethod(
            Invocation.getter(#db),
            returnValue: _FakeAppDatabase_31(this, Invocation.getter(#db)),
          )
          as _i3.AppDatabase);

  @override
  _i3.AppDatabase get attachedDatabase =>
      (super.noSuchMethod(
            Invocation.getter(#attachedDatabase),
            returnValue: _FakeAppDatabase_31(
              this,
              Invocation.getter(#attachedDatabase),
            ),
          )
          as _i3.AppDatabase);

  @override
  _i2.DatabaseConnection get connection =>
      (super.noSuchMethod(
            Invocation.getter(#connection),
            returnValue: _FakeDatabaseConnection_17(
              this,
              Invocation.getter(#connection),
            ),
          )
          as _i2.DatabaseConnection);

  @override
  _i2.SqlTypes get typeMapping =>
      (super.noSuchMethod(
            Invocation.getter(#typeMapping),
            returnValue: _i15.dummyValue<_i2.SqlTypes>(
              this,
              Invocation.getter(#typeMapping),
            ),
          )
          as _i2.SqlTypes);

  @override
  _i2.DriftDatabaseOptions get options =>
      (super.noSuchMethod(
            Invocation.getter(#options),
            returnValue: _FakeDriftDatabaseOptions_15(
              this,
              Invocation.getter(#options),
            ),
          )
          as _i2.DriftDatabaseOptions);

  @override
  _i2.QueryExecutor get executor =>
      (super.noSuchMethod(
            Invocation.getter(#executor),
            returnValue: _FakeQueryExecutor_18(
              this,
              Invocation.getter(#executor),
            ),
          )
          as _i2.QueryExecutor);

  @override
  _i9.StreamQueryStore get streamQueries =>
      (super.noSuchMethod(
            Invocation.getter(#streamQueries),
            returnValue: _FakeStreamQueryStore_19(
              this,
              Invocation.getter(#streamQueries),
            ),
          )
          as _i9.StreamQueryStore);

  @override
  _i2.DatabaseConnectionUser get resolvedEngine =>
      (super.noSuchMethod(
            Invocation.getter(#resolvedEngine),
            returnValue: _FakeDatabaseConnectionUser_20(
              this,
              Invocation.getter(#resolvedEngine),
            ),
          )
          as _i2.DatabaseConnectionUser);

  @override
  _i3.$AppGroupsTable get appGroups =>
      (super.noSuchMethod(
            Invocation.getter(#appGroups),
            returnValue: _Fake$AppGroupsTable_2(
              this,
              Invocation.getter(#appGroups),
            ),
          )
          as _i3.$AppGroupsTable);

  @override
  _i3.$ExpensesTable get expenses =>
      (super.noSuchMethod(
            Invocation.getter(#expenses),
            returnValue: _Fake$ExpensesTable_5(
              this,
              Invocation.getter(#expenses),
            ),
          )
          as _i3.$ExpensesTable);

  @override
  _i11.AppLogger get log =>
      (super.noSuchMethod(
            Invocation.getter(#log),
            returnValue: _FakeAppLogger_32(this, Invocation.getter(#log)),
          )
          as _i11.AppLogger);

  @override
  _i10.Future<void> insertExpense(_i16.ExpenseEntity? expense) =>
      (super.noSuchMethod(
            Invocation.method(#insertExpense, [expense]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<_i16.ExpenseEntity?> getExpenseById(
    String? id, {
    bool? includeDeleted = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getExpenseById,
              [id],
              {#includeDeleted: includeDeleted},
            ),
            returnValue: _i10.Future<_i16.ExpenseEntity?>.value(),
          )
          as _i10.Future<_i16.ExpenseEntity?>);

  @override
  _i10.Future<List<_i16.ExpenseEntity>> getExpensesByGroup(String? groupId) =>
      (super.noSuchMethod(
            Invocation.method(#getExpensesByGroup, [groupId]),
            returnValue: _i10.Future<List<_i16.ExpenseEntity>>.value(
              <_i16.ExpenseEntity>[],
            ),
          )
          as _i10.Future<List<_i16.ExpenseEntity>>);

  @override
  _i10.Future<List<_i16.ExpenseEntity>> getAllExpenses() =>
      (super.noSuchMethod(
            Invocation.method(#getAllExpenses, []),
            returnValue: _i10.Future<List<_i16.ExpenseEntity>>.value(
              <_i16.ExpenseEntity>[],
            ),
          )
          as _i10.Future<List<_i16.ExpenseEntity>>);

  @override
  _i10.Future<void> updateExpenseTimestamp(
    String? id,
    DateTime? serverTimestamp,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateExpenseTimestamp, [id, serverTimestamp]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<void> updateExpense(_i16.ExpenseEntity? expense) =>
      (super.noSuchMethod(
            Invocation.method(#updateExpense, [expense]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<void> deleteExpense(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteExpense, [id]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Stream<List<_i16.ExpenseEntity>> watchExpensesByGroup(String? groupId) =>
      (super.noSuchMethod(
            Invocation.method(#watchExpensesByGroup, [groupId]),
            returnValue: _i10.Stream<List<_i16.ExpenseEntity>>.empty(),
          )
          as _i10.Stream<List<_i16.ExpenseEntity>>);

  @override
  _i10.Stream<List<_i16.ExpenseEntity>> watchAllExpenses() =>
      (super.noSuchMethod(
            Invocation.method(#watchAllExpenses, []),
            returnValue: _i10.Stream<List<_i16.ExpenseEntity>>.empty(),
          )
          as _i10.Stream<List<_i16.ExpenseEntity>>);

  @override
  _i10.Future<void> upsertExpenseFromSync(
    _i16.ExpenseEntity? expense,
    _i17.IEventBroker? eventBroker,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#upsertExpenseFromSync, [expense, eventBroker]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<void> softDeleteExpense(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#softDeleteExpense, [id]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<void> restoreExpense(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#restoreExpense, [id]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<void> hardDeleteExpense(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#hardDeleteExpense, [id]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Stream<T> createStream<T extends Object>(
    _i9.QueryStreamFetcher<T>? stmt,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createStream, [stmt]),
            returnValue: _i10.Stream<T>.empty(),
          )
          as _i10.Stream<T>);

  @override
  T alias<T, D>(_i2.ResultSetImplementation<T, D>? table, String? alias) =>
      (super.noSuchMethod(
            Invocation.method(#alias, [table, alias]),
            returnValue: _i15.dummyValue<T>(
              this,
              Invocation.method(#alias, [table, alias]),
            ),
          )
          as T);

  @override
  void markTablesUpdated(Iterable<_i2.TableInfo<_i2.Table, dynamic>>? tables) =>
      super.noSuchMethod(
        Invocation.method(#markTablesUpdated, [tables]),
        returnValueForMissingStub: null,
      );

  @override
  void notifyUpdates(Set<_i2.TableUpdate>? updates) => super.noSuchMethod(
    Invocation.method(#notifyUpdates, [updates]),
    returnValueForMissingStub: null,
  );

  @override
  _i10.Stream<Set<_i2.TableUpdate>> tableUpdates([
    _i2.TableUpdateQuery? query = const _i2.TableUpdateQuery.any(),
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#tableUpdates, [query]),
            returnValue: _i10.Stream<Set<_i2.TableUpdate>>.empty(),
          )
          as _i10.Stream<Set<_i2.TableUpdate>>);

  @override
  _i10.Future<T> doWhenOpened<T>(
    _i10.FutureOr<T> Function(_i2.QueryExecutor)? fn,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#doWhenOpened, [fn]),
            returnValue:
                _i15.ifNotNull(
                  _i15.dummyValueOrNull<T>(
                    this,
                    Invocation.method(#doWhenOpened, [fn]),
                  ),
                  (T v) => _i10.Future<T>.value(v),
                ) ??
                _FakeFuture_22<T>(this, Invocation.method(#doWhenOpened, [fn])),
          )
          as _i10.Future<T>);

  @override
  _i2.InsertStatement<T, D> into<T extends _i2.Table, D>(
    _i2.TableInfo<T, D>? table,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#into, [table]),
            returnValue: _FakeInsertStatement_23<T, D>(
              this,
              Invocation.method(#into, [table]),
            ),
          )
          as _i2.InsertStatement<T, D>);

  @override
  _i2.UpdateStatement<Tbl, R> update<Tbl extends _i2.Table, R>(
    _i2.TableInfo<Tbl, R>? table,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#update, [table]),
            returnValue: _FakeUpdateStatement_24<Tbl, R>(
              this,
              Invocation.method(#update, [table]),
            ),
          )
          as _i2.UpdateStatement<Tbl, R>);

  @override
  _i2.SimpleSelectStatement<T, R> select<T extends _i2.HasResultSet, R>(
    _i2.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#select, [table], {#distinct: distinct}),
            returnValue: _FakeSimpleSelectStatement_25<T, R>(
              this,
              Invocation.method(#select, [table], {#distinct: distinct}),
            ),
          )
          as _i2.SimpleSelectStatement<T, R>);

  @override
  _i2.JoinedSelectStatement<T, R> selectOnly<T extends _i2.HasResultSet, R>(
    _i2.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#selectOnly, [table], {#distinct: distinct}),
            returnValue: _FakeJoinedSelectStatement_26<T, R>(
              this,
              Invocation.method(#selectOnly, [table], {#distinct: distinct}),
            ),
          )
          as _i2.JoinedSelectStatement<T, R>);

  @override
  _i2.BaseSelectStatement<_i2.TypedResult> selectExpressions(
    Iterable<_i2.Expression<Object>>? columns,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#selectExpressions, [columns]),
            returnValue: _FakeBaseSelectStatement_27<_i2.TypedResult>(
              this,
              Invocation.method(#selectExpressions, [columns]),
            ),
          )
          as _i2.BaseSelectStatement<_i2.TypedResult>);

  @override
  _i2.DeleteStatement<T, D> delete<T extends _i2.Table, D>(
    _i2.TableInfo<T, D>? table,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [table]),
            returnValue: _FakeDeleteStatement_28<T, D>(
              this,
              Invocation.method(#delete, [table]),
            ),
          )
          as _i2.DeleteStatement<T, D>);

  @override
  _i10.Future<int> customUpdate(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i2.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customUpdate,
              [query],
              {
                #variables: variables,
                #updates: updates,
                #updateKind: updateKind,
              },
            ),
            returnValue: _i10.Future<int>.value(0),
          )
          as _i10.Future<int>);

  @override
  _i10.Future<int> customInsert(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customInsert,
              [query],
              {#variables: variables, #updates: updates},
            ),
            returnValue: _i10.Future<int>.value(0),
          )
          as _i10.Future<int>);

  @override
  _i10.Future<List<_i2.QueryRow>> customWriteReturning(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i2.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customWriteReturning,
              [query],
              {
                #variables: variables,
                #updates: updates,
                #updateKind: updateKind,
              },
            ),
            returnValue: _i10.Future<List<_i2.QueryRow>>.value(
              <_i2.QueryRow>[],
            ),
          )
          as _i10.Future<List<_i2.QueryRow>>);

  @override
  _i2.Selectable<_i2.QueryRow> customSelect(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customSelect,
              [query],
              {#variables: variables, #readsFrom: readsFrom},
            ),
            returnValue: _FakeSelectable_29<_i2.QueryRow>(
              this,
              Invocation.method(
                #customSelect,
                [query],
                {#variables: variables, #readsFrom: readsFrom},
              ),
            ),
          )
          as _i2.Selectable<_i2.QueryRow>);

  @override
  _i2.Selectable<_i2.QueryRow> customSelectQuery(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customSelectQuery,
              [query],
              {#variables: variables, #readsFrom: readsFrom},
            ),
            returnValue: _FakeSelectable_29<_i2.QueryRow>(
              this,
              Invocation.method(
                #customSelectQuery,
                [query],
                {#variables: variables, #readsFrom: readsFrom},
              ),
            ),
          )
          as _i2.Selectable<_i2.QueryRow>);

  @override
  _i10.Future<void> customStatement(String? statement, [List<dynamic>? args]) =>
      (super.noSuchMethod(
            Invocation.method(#customStatement, [statement, args]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<T> transaction<T>(
    _i10.Future<T> Function()? action, {
    bool? requireNew = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #transaction,
              [action],
              {#requireNew: requireNew},
            ),
            returnValue:
                _i15.ifNotNull(
                  _i15.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #transaction,
                      [action],
                      {#requireNew: requireNew},
                    ),
                  ),
                  (T v) => _i10.Future<T>.value(v),
                ) ??
                _FakeFuture_22<T>(
                  this,
                  Invocation.method(
                    #transaction,
                    [action],
                    {#requireNew: requireNew},
                  ),
                ),
          )
          as _i10.Future<T>);

  @override
  _i10.Future<T> exclusively<T>(_i10.Future<T> Function()? action) =>
      (super.noSuchMethod(
            Invocation.method(#exclusively, [action]),
            returnValue:
                _i15.ifNotNull(
                  _i15.dummyValueOrNull<T>(
                    this,
                    Invocation.method(#exclusively, [action]),
                  ),
                  (T v) => _i10.Future<T>.value(v),
                ) ??
                _FakeFuture_22<T>(
                  this,
                  Invocation.method(#exclusively, [action]),
                ),
          )
          as _i10.Future<T>);

  @override
  _i10.Future<void> batch(
    _i10.FutureOr<void> Function(_i2.Batch)? runInBatch,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#batch, [runInBatch]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<T> runWithInterceptor<T>(
    _i10.Future<T> Function()? action, {
    required _i2.QueryInterceptor? interceptor,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #runWithInterceptor,
              [action],
              {#interceptor: interceptor},
            ),
            returnValue:
                _i15.ifNotNull(
                  _i15.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #runWithInterceptor,
                      [action],
                      {#interceptor: interceptor},
                    ),
                  ),
                  (T v) => _i10.Future<T>.value(v),
                ) ??
                _FakeFuture_22<T>(
                  this,
                  Invocation.method(
                    #runWithInterceptor,
                    [action],
                    {#interceptor: interceptor},
                  ),
                ),
          )
          as _i10.Future<T>);

  @override
  _i2.GenerationContext $write(
    _i2.Component? component, {
    bool? hasMultipleTables,
    int? startIndex,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #$write,
              [component],
              {#hasMultipleTables: hasMultipleTables, #startIndex: startIndex},
            ),
            returnValue: _FakeGenerationContext_30(
              this,
              Invocation.method(
                #$write,
                [component],
                {
                  #hasMultipleTables: hasMultipleTables,
                  #startIndex: startIndex,
                },
              ),
            ),
          )
          as _i2.GenerationContext);

  @override
  _i2.GenerationContext $writeInsertable(
    _i2.TableInfo<_i2.Table, dynamic>? table,
    _i2.Insertable<dynamic>? insertable, {
    int? startIndex,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #$writeInsertable,
              [table, insertable],
              {#startIndex: startIndex},
            ),
            returnValue: _FakeGenerationContext_30(
              this,
              Invocation.method(
                #$writeInsertable,
                [table, insertable],
                {#startIndex: startIndex},
              ),
            ),
          )
          as _i2.GenerationContext);

  @override
  String $expandVar(int? start, int? amount) =>
      (super.noSuchMethod(
            Invocation.method(#$expandVar, [start, amount]),
            returnValue: _i15.dummyValue<String>(
              this,
              Invocation.method(#$expandVar, [start, amount]),
            ),
          )
          as String);

  @override
  _i10.Future<void> close() =>
      (super.noSuchMethod(
            Invocation.method(#close, []),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);
}

/// A class which mocks [GroupsDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockGroupsDao extends _i1.Mock implements _i5.GroupsDao {
  MockGroupsDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.AppDatabase get db =>
      (super.noSuchMethod(
            Invocation.getter(#db),
            returnValue: _FakeAppDatabase_31(this, Invocation.getter(#db)),
          )
          as _i3.AppDatabase);

  @override
  _i3.AppDatabase get attachedDatabase =>
      (super.noSuchMethod(
            Invocation.getter(#attachedDatabase),
            returnValue: _FakeAppDatabase_31(
              this,
              Invocation.getter(#attachedDatabase),
            ),
          )
          as _i3.AppDatabase);

  @override
  _i2.DatabaseConnection get connection =>
      (super.noSuchMethod(
            Invocation.getter(#connection),
            returnValue: _FakeDatabaseConnection_17(
              this,
              Invocation.getter(#connection),
            ),
          )
          as _i2.DatabaseConnection);

  @override
  _i2.SqlTypes get typeMapping =>
      (super.noSuchMethod(
            Invocation.getter(#typeMapping),
            returnValue: _i15.dummyValue<_i2.SqlTypes>(
              this,
              Invocation.getter(#typeMapping),
            ),
          )
          as _i2.SqlTypes);

  @override
  _i2.DriftDatabaseOptions get options =>
      (super.noSuchMethod(
            Invocation.getter(#options),
            returnValue: _FakeDriftDatabaseOptions_15(
              this,
              Invocation.getter(#options),
            ),
          )
          as _i2.DriftDatabaseOptions);

  @override
  _i2.QueryExecutor get executor =>
      (super.noSuchMethod(
            Invocation.getter(#executor),
            returnValue: _FakeQueryExecutor_18(
              this,
              Invocation.getter(#executor),
            ),
          )
          as _i2.QueryExecutor);

  @override
  _i9.StreamQueryStore get streamQueries =>
      (super.noSuchMethod(
            Invocation.getter(#streamQueries),
            returnValue: _FakeStreamQueryStore_19(
              this,
              Invocation.getter(#streamQueries),
            ),
          )
          as _i9.StreamQueryStore);

  @override
  _i2.DatabaseConnectionUser get resolvedEngine =>
      (super.noSuchMethod(
            Invocation.getter(#resolvedEngine),
            returnValue: _FakeDatabaseConnectionUser_20(
              this,
              Invocation.getter(#resolvedEngine),
            ),
          )
          as _i2.DatabaseConnectionUser);

  @override
  _i3.$AppGroupsTable get appGroups =>
      (super.noSuchMethod(
            Invocation.getter(#appGroups),
            returnValue: _Fake$AppGroupsTable_2(
              this,
              Invocation.getter(#appGroups),
            ),
          )
          as _i3.$AppGroupsTable);

  @override
  _i3.$AppUsersTable get appUsers =>
      (super.noSuchMethod(
            Invocation.getter(#appUsers),
            returnValue: _Fake$AppUsersTable_1(
              this,
              Invocation.getter(#appUsers),
            ),
          )
          as _i3.$AppUsersTable);

  @override
  _i3.$AppGroupMembersTable get appGroupMembers =>
      (super.noSuchMethod(
            Invocation.getter(#appGroupMembers),
            returnValue: _Fake$AppGroupMembersTable_3(
              this,
              Invocation.getter(#appGroupMembers),
            ),
          )
          as _i3.$AppGroupMembersTable);

  @override
  _i11.AppLogger get log =>
      (super.noSuchMethod(
            Invocation.getter(#log),
            returnValue: _FakeAppLogger_32(this, Invocation.getter(#log)),
          )
          as _i11.AppLogger);

  @override
  _i10.Future<void> insertGroup(_i18.GroupEntity? group) =>
      (super.noSuchMethod(
            Invocation.method(#insertGroup, [group]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<_i18.GroupEntity?> getGroupById(
    String? id, {
    bool? includeDeleted = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getGroupById,
              [id],
              {#includeDeleted: includeDeleted},
            ),
            returnValue: _i10.Future<_i18.GroupEntity?>.value(),
          )
          as _i10.Future<_i18.GroupEntity?>);

  @override
  _i10.Future<List<_i18.GroupEntity>> getAllGroups() =>
      (super.noSuchMethod(
            Invocation.method(#getAllGroups, []),
            returnValue: _i10.Future<List<_i18.GroupEntity>>.value(
              <_i18.GroupEntity>[],
            ),
          )
          as _i10.Future<List<_i18.GroupEntity>>);

  @override
  _i10.Future<void> updateGroup(_i18.GroupEntity? group) =>
      (super.noSuchMethod(
            Invocation.method(#updateGroup, [group]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<void> deleteGroup(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteGroup, [id]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<void> addGroupMember(_i19.GroupMemberEntity? member) =>
      (super.noSuchMethod(
            Invocation.method(#addGroupMember, [member]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<void> removeGroupMember(String? groupId, String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#removeGroupMember, [groupId, userId]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<List<String>> getGroupMembers(String? groupId) =>
      (super.noSuchMethod(
            Invocation.method(#getGroupMembers, [groupId]),
            returnValue: _i10.Future<List<String>>.value(<String>[]),
          )
          as _i10.Future<List<String>>);

  @override
  _i10.Future<List<_i18.GroupEntity>> getUserGroups(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getUserGroups, [userId]),
            returnValue: _i10.Future<List<_i18.GroupEntity>>.value(
              <_i18.GroupEntity>[],
            ),
          )
          as _i10.Future<List<_i18.GroupEntity>>);

  @override
  _i10.Stream<List<_i18.GroupEntity>> watchAllGroups() =>
      (super.noSuchMethod(
            Invocation.method(#watchAllGroups, []),
            returnValue: _i10.Stream<List<_i18.GroupEntity>>.empty(),
          )
          as _i10.Stream<List<_i18.GroupEntity>>);

  @override
  _i10.Stream<List<_i18.GroupEntity>> watchUserGroups(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#watchUserGroups, [userId]),
            returnValue: _i10.Stream<List<_i18.GroupEntity>>.empty(),
          )
          as _i10.Stream<List<_i18.GroupEntity>>);

  @override
  _i10.Future<List<_i19.GroupMemberEntity>> getAllGroupMembers(
    String? groupId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getAllGroupMembers, [groupId]),
            returnValue: _i10.Future<List<_i19.GroupMemberEntity>>.value(
              <_i19.GroupMemberEntity>[],
            ),
          )
          as _i10.Future<List<_i19.GroupMemberEntity>>);

  @override
  _i10.Future<void> updateGroupTimestamp(
    String? id,
    DateTime? serverTimestamp,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateGroupTimestamp, [id, serverTimestamp]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<void> updateGroupActivity(String? groupId) =>
      (super.noSuchMethod(
            Invocation.method(#updateGroupActivity, [groupId]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<void> upsertGroupMemberFromSync(
    _i19.GroupMemberEntity? member,
    _i17.IEventBroker? eventBroker,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#upsertGroupMemberFromSync, [
              member,
              eventBroker,
            ]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<void> upsertGroupFromSync(
    _i18.GroupEntity? group,
    _i17.IEventBroker? eventBroker,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#upsertGroupFromSync, [group, eventBroker]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<void> softDeleteGroup(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#softDeleteGroup, [id]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<void> restoreGroup(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#restoreGroup, [id]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<void> hardDeleteGroup(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#hardDeleteGroup, [id]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Stream<T> createStream<T extends Object>(
    _i9.QueryStreamFetcher<T>? stmt,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createStream, [stmt]),
            returnValue: _i10.Stream<T>.empty(),
          )
          as _i10.Stream<T>);

  @override
  T alias<T, D>(_i2.ResultSetImplementation<T, D>? table, String? alias) =>
      (super.noSuchMethod(
            Invocation.method(#alias, [table, alias]),
            returnValue: _i15.dummyValue<T>(
              this,
              Invocation.method(#alias, [table, alias]),
            ),
          )
          as T);

  @override
  void markTablesUpdated(Iterable<_i2.TableInfo<_i2.Table, dynamic>>? tables) =>
      super.noSuchMethod(
        Invocation.method(#markTablesUpdated, [tables]),
        returnValueForMissingStub: null,
      );

  @override
  void notifyUpdates(Set<_i2.TableUpdate>? updates) => super.noSuchMethod(
    Invocation.method(#notifyUpdates, [updates]),
    returnValueForMissingStub: null,
  );

  @override
  _i10.Stream<Set<_i2.TableUpdate>> tableUpdates([
    _i2.TableUpdateQuery? query = const _i2.TableUpdateQuery.any(),
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#tableUpdates, [query]),
            returnValue: _i10.Stream<Set<_i2.TableUpdate>>.empty(),
          )
          as _i10.Stream<Set<_i2.TableUpdate>>);

  @override
  _i10.Future<T> doWhenOpened<T>(
    _i10.FutureOr<T> Function(_i2.QueryExecutor)? fn,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#doWhenOpened, [fn]),
            returnValue:
                _i15.ifNotNull(
                  _i15.dummyValueOrNull<T>(
                    this,
                    Invocation.method(#doWhenOpened, [fn]),
                  ),
                  (T v) => _i10.Future<T>.value(v),
                ) ??
                _FakeFuture_22<T>(this, Invocation.method(#doWhenOpened, [fn])),
          )
          as _i10.Future<T>);

  @override
  _i2.InsertStatement<T, D> into<T extends _i2.Table, D>(
    _i2.TableInfo<T, D>? table,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#into, [table]),
            returnValue: _FakeInsertStatement_23<T, D>(
              this,
              Invocation.method(#into, [table]),
            ),
          )
          as _i2.InsertStatement<T, D>);

  @override
  _i2.UpdateStatement<Tbl, R> update<Tbl extends _i2.Table, R>(
    _i2.TableInfo<Tbl, R>? table,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#update, [table]),
            returnValue: _FakeUpdateStatement_24<Tbl, R>(
              this,
              Invocation.method(#update, [table]),
            ),
          )
          as _i2.UpdateStatement<Tbl, R>);

  @override
  _i2.SimpleSelectStatement<T, R> select<T extends _i2.HasResultSet, R>(
    _i2.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#select, [table], {#distinct: distinct}),
            returnValue: _FakeSimpleSelectStatement_25<T, R>(
              this,
              Invocation.method(#select, [table], {#distinct: distinct}),
            ),
          )
          as _i2.SimpleSelectStatement<T, R>);

  @override
  _i2.JoinedSelectStatement<T, R> selectOnly<T extends _i2.HasResultSet, R>(
    _i2.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#selectOnly, [table], {#distinct: distinct}),
            returnValue: _FakeJoinedSelectStatement_26<T, R>(
              this,
              Invocation.method(#selectOnly, [table], {#distinct: distinct}),
            ),
          )
          as _i2.JoinedSelectStatement<T, R>);

  @override
  _i2.BaseSelectStatement<_i2.TypedResult> selectExpressions(
    Iterable<_i2.Expression<Object>>? columns,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#selectExpressions, [columns]),
            returnValue: _FakeBaseSelectStatement_27<_i2.TypedResult>(
              this,
              Invocation.method(#selectExpressions, [columns]),
            ),
          )
          as _i2.BaseSelectStatement<_i2.TypedResult>);

  @override
  _i2.DeleteStatement<T, D> delete<T extends _i2.Table, D>(
    _i2.TableInfo<T, D>? table,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [table]),
            returnValue: _FakeDeleteStatement_28<T, D>(
              this,
              Invocation.method(#delete, [table]),
            ),
          )
          as _i2.DeleteStatement<T, D>);

  @override
  _i10.Future<int> customUpdate(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i2.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customUpdate,
              [query],
              {
                #variables: variables,
                #updates: updates,
                #updateKind: updateKind,
              },
            ),
            returnValue: _i10.Future<int>.value(0),
          )
          as _i10.Future<int>);

  @override
  _i10.Future<int> customInsert(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customInsert,
              [query],
              {#variables: variables, #updates: updates},
            ),
            returnValue: _i10.Future<int>.value(0),
          )
          as _i10.Future<int>);

  @override
  _i10.Future<List<_i2.QueryRow>> customWriteReturning(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i2.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customWriteReturning,
              [query],
              {
                #variables: variables,
                #updates: updates,
                #updateKind: updateKind,
              },
            ),
            returnValue: _i10.Future<List<_i2.QueryRow>>.value(
              <_i2.QueryRow>[],
            ),
          )
          as _i10.Future<List<_i2.QueryRow>>);

  @override
  _i2.Selectable<_i2.QueryRow> customSelect(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customSelect,
              [query],
              {#variables: variables, #readsFrom: readsFrom},
            ),
            returnValue: _FakeSelectable_29<_i2.QueryRow>(
              this,
              Invocation.method(
                #customSelect,
                [query],
                {#variables: variables, #readsFrom: readsFrom},
              ),
            ),
          )
          as _i2.Selectable<_i2.QueryRow>);

  @override
  _i2.Selectable<_i2.QueryRow> customSelectQuery(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customSelectQuery,
              [query],
              {#variables: variables, #readsFrom: readsFrom},
            ),
            returnValue: _FakeSelectable_29<_i2.QueryRow>(
              this,
              Invocation.method(
                #customSelectQuery,
                [query],
                {#variables: variables, #readsFrom: readsFrom},
              ),
            ),
          )
          as _i2.Selectable<_i2.QueryRow>);

  @override
  _i10.Future<void> customStatement(String? statement, [List<dynamic>? args]) =>
      (super.noSuchMethod(
            Invocation.method(#customStatement, [statement, args]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<T> transaction<T>(
    _i10.Future<T> Function()? action, {
    bool? requireNew = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #transaction,
              [action],
              {#requireNew: requireNew},
            ),
            returnValue:
                _i15.ifNotNull(
                  _i15.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #transaction,
                      [action],
                      {#requireNew: requireNew},
                    ),
                  ),
                  (T v) => _i10.Future<T>.value(v),
                ) ??
                _FakeFuture_22<T>(
                  this,
                  Invocation.method(
                    #transaction,
                    [action],
                    {#requireNew: requireNew},
                  ),
                ),
          )
          as _i10.Future<T>);

  @override
  _i10.Future<T> exclusively<T>(_i10.Future<T> Function()? action) =>
      (super.noSuchMethod(
            Invocation.method(#exclusively, [action]),
            returnValue:
                _i15.ifNotNull(
                  _i15.dummyValueOrNull<T>(
                    this,
                    Invocation.method(#exclusively, [action]),
                  ),
                  (T v) => _i10.Future<T>.value(v),
                ) ??
                _FakeFuture_22<T>(
                  this,
                  Invocation.method(#exclusively, [action]),
                ),
          )
          as _i10.Future<T>);

  @override
  _i10.Future<void> batch(
    _i10.FutureOr<void> Function(_i2.Batch)? runInBatch,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#batch, [runInBatch]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<T> runWithInterceptor<T>(
    _i10.Future<T> Function()? action, {
    required _i2.QueryInterceptor? interceptor,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #runWithInterceptor,
              [action],
              {#interceptor: interceptor},
            ),
            returnValue:
                _i15.ifNotNull(
                  _i15.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #runWithInterceptor,
                      [action],
                      {#interceptor: interceptor},
                    ),
                  ),
                  (T v) => _i10.Future<T>.value(v),
                ) ??
                _FakeFuture_22<T>(
                  this,
                  Invocation.method(
                    #runWithInterceptor,
                    [action],
                    {#interceptor: interceptor},
                  ),
                ),
          )
          as _i10.Future<T>);

  @override
  _i2.GenerationContext $write(
    _i2.Component? component, {
    bool? hasMultipleTables,
    int? startIndex,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #$write,
              [component],
              {#hasMultipleTables: hasMultipleTables, #startIndex: startIndex},
            ),
            returnValue: _FakeGenerationContext_30(
              this,
              Invocation.method(
                #$write,
                [component],
                {
                  #hasMultipleTables: hasMultipleTables,
                  #startIndex: startIndex,
                },
              ),
            ),
          )
          as _i2.GenerationContext);

  @override
  _i2.GenerationContext $writeInsertable(
    _i2.TableInfo<_i2.Table, dynamic>? table,
    _i2.Insertable<dynamic>? insertable, {
    int? startIndex,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #$writeInsertable,
              [table, insertable],
              {#startIndex: startIndex},
            ),
            returnValue: _FakeGenerationContext_30(
              this,
              Invocation.method(
                #$writeInsertable,
                [table, insertable],
                {#startIndex: startIndex},
              ),
            ),
          )
          as _i2.GenerationContext);

  @override
  String $expandVar(int? start, int? amount) =>
      (super.noSuchMethod(
            Invocation.method(#$expandVar, [start, amount]),
            returnValue: _i15.dummyValue<String>(
              this,
              Invocation.method(#$expandVar, [start, amount]),
            ),
          )
          as String);

  @override
  _i10.Future<void> close() =>
      (super.noSuchMethod(
            Invocation.method(#close, []),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);
}

/// A class which mocks [ExpenseSharesDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockExpenseSharesDao extends _i1.Mock implements _i7.ExpenseSharesDao {
  MockExpenseSharesDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.AppDatabase get db =>
      (super.noSuchMethod(
            Invocation.getter(#db),
            returnValue: _FakeAppDatabase_31(this, Invocation.getter(#db)),
          )
          as _i3.AppDatabase);

  @override
  _i3.AppDatabase get attachedDatabase =>
      (super.noSuchMethod(
            Invocation.getter(#attachedDatabase),
            returnValue: _FakeAppDatabase_31(
              this,
              Invocation.getter(#attachedDatabase),
            ),
          )
          as _i3.AppDatabase);

  @override
  _i2.DatabaseConnection get connection =>
      (super.noSuchMethod(
            Invocation.getter(#connection),
            returnValue: _FakeDatabaseConnection_17(
              this,
              Invocation.getter(#connection),
            ),
          )
          as _i2.DatabaseConnection);

  @override
  _i2.SqlTypes get typeMapping =>
      (super.noSuchMethod(
            Invocation.getter(#typeMapping),
            returnValue: _i15.dummyValue<_i2.SqlTypes>(
              this,
              Invocation.getter(#typeMapping),
            ),
          )
          as _i2.SqlTypes);

  @override
  _i2.DriftDatabaseOptions get options =>
      (super.noSuchMethod(
            Invocation.getter(#options),
            returnValue: _FakeDriftDatabaseOptions_15(
              this,
              Invocation.getter(#options),
            ),
          )
          as _i2.DriftDatabaseOptions);

  @override
  _i2.QueryExecutor get executor =>
      (super.noSuchMethod(
            Invocation.getter(#executor),
            returnValue: _FakeQueryExecutor_18(
              this,
              Invocation.getter(#executor),
            ),
          )
          as _i2.QueryExecutor);

  @override
  _i9.StreamQueryStore get streamQueries =>
      (super.noSuchMethod(
            Invocation.getter(#streamQueries),
            returnValue: _FakeStreamQueryStore_19(
              this,
              Invocation.getter(#streamQueries),
            ),
          )
          as _i9.StreamQueryStore);

  @override
  _i2.DatabaseConnectionUser get resolvedEngine =>
      (super.noSuchMethod(
            Invocation.getter(#resolvedEngine),
            returnValue: _FakeDatabaseConnectionUser_20(
              this,
              Invocation.getter(#resolvedEngine),
            ),
          )
          as _i2.DatabaseConnectionUser);

  @override
  _i3.$AppGroupsTable get appGroups =>
      (super.noSuchMethod(
            Invocation.getter(#appGroups),
            returnValue: _Fake$AppGroupsTable_2(
              this,
              Invocation.getter(#appGroups),
            ),
          )
          as _i3.$AppGroupsTable);

  @override
  _i3.$ExpensesTable get expenses =>
      (super.noSuchMethod(
            Invocation.getter(#expenses),
            returnValue: _Fake$ExpensesTable_5(
              this,
              Invocation.getter(#expenses),
            ),
          )
          as _i3.$ExpensesTable);

  @override
  _i3.$AppUsersTable get appUsers =>
      (super.noSuchMethod(
            Invocation.getter(#appUsers),
            returnValue: _Fake$AppUsersTable_1(
              this,
              Invocation.getter(#appUsers),
            ),
          )
          as _i3.$AppUsersTable);

  @override
  _i3.$ExpenseSharesTable get expenseShares =>
      (super.noSuchMethod(
            Invocation.getter(#expenseShares),
            returnValue: _Fake$ExpenseSharesTable_6(
              this,
              Invocation.getter(#expenseShares),
            ),
          )
          as _i3.$ExpenseSharesTable);

  @override
  _i10.Future<void> insertExpenseShare(_i20.ExpenseShareEntity? share) =>
      (super.noSuchMethod(
            Invocation.method(#insertExpenseShare, [share]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<List<_i20.ExpenseShareEntity>> getExpenseShares(
    String? expenseId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getExpenseShares, [expenseId]),
            returnValue: _i10.Future<List<_i20.ExpenseShareEntity>>.value(
              <_i20.ExpenseShareEntity>[],
            ),
          )
          as _i10.Future<List<_i20.ExpenseShareEntity>>);

  @override
  _i10.Future<void> deleteExpenseShares(String? expenseId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteExpenseShares, [expenseId]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<List<_i20.ExpenseShareEntity>> getSharesByGroup(
    String? groupId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getSharesByGroup, [groupId]),
            returnValue: _i10.Future<List<_i20.ExpenseShareEntity>>.value(
              <_i20.ExpenseShareEntity>[],
            ),
          )
          as _i10.Future<List<_i20.ExpenseShareEntity>>);

  @override
  _i10.Stream<T> createStream<T extends Object>(
    _i9.QueryStreamFetcher<T>? stmt,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createStream, [stmt]),
            returnValue: _i10.Stream<T>.empty(),
          )
          as _i10.Stream<T>);

  @override
  T alias<T, D>(_i2.ResultSetImplementation<T, D>? table, String? alias) =>
      (super.noSuchMethod(
            Invocation.method(#alias, [table, alias]),
            returnValue: _i15.dummyValue<T>(
              this,
              Invocation.method(#alias, [table, alias]),
            ),
          )
          as T);

  @override
  void markTablesUpdated(Iterable<_i2.TableInfo<_i2.Table, dynamic>>? tables) =>
      super.noSuchMethod(
        Invocation.method(#markTablesUpdated, [tables]),
        returnValueForMissingStub: null,
      );

  @override
  void notifyUpdates(Set<_i2.TableUpdate>? updates) => super.noSuchMethod(
    Invocation.method(#notifyUpdates, [updates]),
    returnValueForMissingStub: null,
  );

  @override
  _i10.Stream<Set<_i2.TableUpdate>> tableUpdates([
    _i2.TableUpdateQuery? query = const _i2.TableUpdateQuery.any(),
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#tableUpdates, [query]),
            returnValue: _i10.Stream<Set<_i2.TableUpdate>>.empty(),
          )
          as _i10.Stream<Set<_i2.TableUpdate>>);

  @override
  _i10.Future<T> doWhenOpened<T>(
    _i10.FutureOr<T> Function(_i2.QueryExecutor)? fn,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#doWhenOpened, [fn]),
            returnValue:
                _i15.ifNotNull(
                  _i15.dummyValueOrNull<T>(
                    this,
                    Invocation.method(#doWhenOpened, [fn]),
                  ),
                  (T v) => _i10.Future<T>.value(v),
                ) ??
                _FakeFuture_22<T>(this, Invocation.method(#doWhenOpened, [fn])),
          )
          as _i10.Future<T>);

  @override
  _i2.InsertStatement<T, D> into<T extends _i2.Table, D>(
    _i2.TableInfo<T, D>? table,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#into, [table]),
            returnValue: _FakeInsertStatement_23<T, D>(
              this,
              Invocation.method(#into, [table]),
            ),
          )
          as _i2.InsertStatement<T, D>);

  @override
  _i2.UpdateStatement<Tbl, R> update<Tbl extends _i2.Table, R>(
    _i2.TableInfo<Tbl, R>? table,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#update, [table]),
            returnValue: _FakeUpdateStatement_24<Tbl, R>(
              this,
              Invocation.method(#update, [table]),
            ),
          )
          as _i2.UpdateStatement<Tbl, R>);

  @override
  _i2.SimpleSelectStatement<T, R> select<T extends _i2.HasResultSet, R>(
    _i2.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#select, [table], {#distinct: distinct}),
            returnValue: _FakeSimpleSelectStatement_25<T, R>(
              this,
              Invocation.method(#select, [table], {#distinct: distinct}),
            ),
          )
          as _i2.SimpleSelectStatement<T, R>);

  @override
  _i2.JoinedSelectStatement<T, R> selectOnly<T extends _i2.HasResultSet, R>(
    _i2.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#selectOnly, [table], {#distinct: distinct}),
            returnValue: _FakeJoinedSelectStatement_26<T, R>(
              this,
              Invocation.method(#selectOnly, [table], {#distinct: distinct}),
            ),
          )
          as _i2.JoinedSelectStatement<T, R>);

  @override
  _i2.BaseSelectStatement<_i2.TypedResult> selectExpressions(
    Iterable<_i2.Expression<Object>>? columns,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#selectExpressions, [columns]),
            returnValue: _FakeBaseSelectStatement_27<_i2.TypedResult>(
              this,
              Invocation.method(#selectExpressions, [columns]),
            ),
          )
          as _i2.BaseSelectStatement<_i2.TypedResult>);

  @override
  _i2.DeleteStatement<T, D> delete<T extends _i2.Table, D>(
    _i2.TableInfo<T, D>? table,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [table]),
            returnValue: _FakeDeleteStatement_28<T, D>(
              this,
              Invocation.method(#delete, [table]),
            ),
          )
          as _i2.DeleteStatement<T, D>);

  @override
  _i10.Future<int> customUpdate(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i2.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customUpdate,
              [query],
              {
                #variables: variables,
                #updates: updates,
                #updateKind: updateKind,
              },
            ),
            returnValue: _i10.Future<int>.value(0),
          )
          as _i10.Future<int>);

  @override
  _i10.Future<int> customInsert(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customInsert,
              [query],
              {#variables: variables, #updates: updates},
            ),
            returnValue: _i10.Future<int>.value(0),
          )
          as _i10.Future<int>);

  @override
  _i10.Future<List<_i2.QueryRow>> customWriteReturning(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i2.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customWriteReturning,
              [query],
              {
                #variables: variables,
                #updates: updates,
                #updateKind: updateKind,
              },
            ),
            returnValue: _i10.Future<List<_i2.QueryRow>>.value(
              <_i2.QueryRow>[],
            ),
          )
          as _i10.Future<List<_i2.QueryRow>>);

  @override
  _i2.Selectable<_i2.QueryRow> customSelect(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customSelect,
              [query],
              {#variables: variables, #readsFrom: readsFrom},
            ),
            returnValue: _FakeSelectable_29<_i2.QueryRow>(
              this,
              Invocation.method(
                #customSelect,
                [query],
                {#variables: variables, #readsFrom: readsFrom},
              ),
            ),
          )
          as _i2.Selectable<_i2.QueryRow>);

  @override
  _i2.Selectable<_i2.QueryRow> customSelectQuery(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customSelectQuery,
              [query],
              {#variables: variables, #readsFrom: readsFrom},
            ),
            returnValue: _FakeSelectable_29<_i2.QueryRow>(
              this,
              Invocation.method(
                #customSelectQuery,
                [query],
                {#variables: variables, #readsFrom: readsFrom},
              ),
            ),
          )
          as _i2.Selectable<_i2.QueryRow>);

  @override
  _i10.Future<void> customStatement(String? statement, [List<dynamic>? args]) =>
      (super.noSuchMethod(
            Invocation.method(#customStatement, [statement, args]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<T> transaction<T>(
    _i10.Future<T> Function()? action, {
    bool? requireNew = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #transaction,
              [action],
              {#requireNew: requireNew},
            ),
            returnValue:
                _i15.ifNotNull(
                  _i15.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #transaction,
                      [action],
                      {#requireNew: requireNew},
                    ),
                  ),
                  (T v) => _i10.Future<T>.value(v),
                ) ??
                _FakeFuture_22<T>(
                  this,
                  Invocation.method(
                    #transaction,
                    [action],
                    {#requireNew: requireNew},
                  ),
                ),
          )
          as _i10.Future<T>);

  @override
  _i10.Future<T> exclusively<T>(_i10.Future<T> Function()? action) =>
      (super.noSuchMethod(
            Invocation.method(#exclusively, [action]),
            returnValue:
                _i15.ifNotNull(
                  _i15.dummyValueOrNull<T>(
                    this,
                    Invocation.method(#exclusively, [action]),
                  ),
                  (T v) => _i10.Future<T>.value(v),
                ) ??
                _FakeFuture_22<T>(
                  this,
                  Invocation.method(#exclusively, [action]),
                ),
          )
          as _i10.Future<T>);

  @override
  _i10.Future<void> batch(
    _i10.FutureOr<void> Function(_i2.Batch)? runInBatch,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#batch, [runInBatch]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<T> runWithInterceptor<T>(
    _i10.Future<T> Function()? action, {
    required _i2.QueryInterceptor? interceptor,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #runWithInterceptor,
              [action],
              {#interceptor: interceptor},
            ),
            returnValue:
                _i15.ifNotNull(
                  _i15.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #runWithInterceptor,
                      [action],
                      {#interceptor: interceptor},
                    ),
                  ),
                  (T v) => _i10.Future<T>.value(v),
                ) ??
                _FakeFuture_22<T>(
                  this,
                  Invocation.method(
                    #runWithInterceptor,
                    [action],
                    {#interceptor: interceptor},
                  ),
                ),
          )
          as _i10.Future<T>);

  @override
  _i2.GenerationContext $write(
    _i2.Component? component, {
    bool? hasMultipleTables,
    int? startIndex,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #$write,
              [component],
              {#hasMultipleTables: hasMultipleTables, #startIndex: startIndex},
            ),
            returnValue: _FakeGenerationContext_30(
              this,
              Invocation.method(
                #$write,
                [component],
                {
                  #hasMultipleTables: hasMultipleTables,
                  #startIndex: startIndex,
                },
              ),
            ),
          )
          as _i2.GenerationContext);

  @override
  _i2.GenerationContext $writeInsertable(
    _i2.TableInfo<_i2.Table, dynamic>? table,
    _i2.Insertable<dynamic>? insertable, {
    int? startIndex,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #$writeInsertable,
              [table, insertable],
              {#startIndex: startIndex},
            ),
            returnValue: _FakeGenerationContext_30(
              this,
              Invocation.method(
                #$writeInsertable,
                [table, insertable],
                {#startIndex: startIndex},
              ),
            ),
          )
          as _i2.GenerationContext);

  @override
  String $expandVar(int? start, int? amount) =>
      (super.noSuchMethod(
            Invocation.method(#$expandVar, [start, amount]),
            returnValue: _i15.dummyValue<String>(
              this,
              Invocation.method(#$expandVar, [start, amount]),
            ),
          )
          as String);

  @override
  _i10.Future<void> close() =>
      (super.noSuchMethod(
            Invocation.method(#close, []),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);
}

/// A class which mocks [FirebaseFirestore].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseFirestore extends _i1.Mock implements _i14.FirebaseFirestore {
  MockFirebaseFirestore() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.FirebaseApp get app =>
      (super.noSuchMethod(
            Invocation.getter(#app),
            returnValue: _FakeFirebaseApp_33(this, Invocation.getter(#app)),
          )
          as _i12.FirebaseApp);

  @override
  String get databaseURL =>
      (super.noSuchMethod(
            Invocation.getter(#databaseURL),
            returnValue: _i15.dummyValue<String>(
              this,
              Invocation.getter(#databaseURL),
            ),
          )
          as String);

  @override
  String get databaseId =>
      (super.noSuchMethod(
            Invocation.getter(#databaseId),
            returnValue: _i15.dummyValue<String>(
              this,
              Invocation.getter(#databaseId),
            ),
          )
          as String);

  @override
  _i13.Settings get settings =>
      (super.noSuchMethod(
            Invocation.getter(#settings),
            returnValue: _FakeSettings_34(this, Invocation.getter(#settings)),
          )
          as _i13.Settings);

  @override
  set app(_i12.FirebaseApp? _app) => super.noSuchMethod(
    Invocation.setter(#app, _app),
    returnValueForMissingStub: null,
  );

  @override
  set databaseURL(String? _databaseURL) => super.noSuchMethod(
    Invocation.setter(#databaseURL, _databaseURL),
    returnValueForMissingStub: null,
  );

  @override
  set databaseId(String? _databaseId) => super.noSuchMethod(
    Invocation.setter(#databaseId, _databaseId),
    returnValueForMissingStub: null,
  );

  @override
  set settings(_i13.Settings? settings) => super.noSuchMethod(
    Invocation.setter(#settings, settings),
    returnValueForMissingStub: null,
  );

  @override
  Map<dynamic, dynamic> get pluginConstants =>
      (super.noSuchMethod(
            Invocation.getter(#pluginConstants),
            returnValue: <dynamic, dynamic>{},
          )
          as Map<dynamic, dynamic>);

  @override
  _i14.CollectionReference<Map<String, dynamic>> collection(
    String? collectionPath,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#collection, [collectionPath]),
            returnValue: _FakeCollectionReference_35<Map<String, dynamic>>(
              this,
              Invocation.method(#collection, [collectionPath]),
            ),
          )
          as _i14.CollectionReference<Map<String, dynamic>>);

  @override
  _i14.WriteBatch batch() =>
      (super.noSuchMethod(
            Invocation.method(#batch, []),
            returnValue: _FakeWriteBatch_36(
              this,
              Invocation.method(#batch, []),
            ),
          )
          as _i14.WriteBatch);

  @override
  _i10.Future<void> clearPersistence() =>
      (super.noSuchMethod(
            Invocation.method(#clearPersistence, []),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<void> enablePersistence([
    _i13.PersistenceSettings? persistenceSettings,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#enablePersistence, [persistenceSettings]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i14.LoadBundleTask loadBundle(_i21.Uint8List? bundle) =>
      (super.noSuchMethod(
            Invocation.method(#loadBundle, [bundle]),
            returnValue: _FakeLoadBundleTask_37(
              this,
              Invocation.method(#loadBundle, [bundle]),
            ),
          )
          as _i14.LoadBundleTask);

  @override
  void useFirestoreEmulator(
    String? host,
    int? port, {
    bool? sslEnabled = false,
    bool? automaticHostMapping = true,
  }) => super.noSuchMethod(
    Invocation.method(
      #useFirestoreEmulator,
      [host, port],
      {#sslEnabled: sslEnabled, #automaticHostMapping: automaticHostMapping},
    ),
    returnValueForMissingStub: null,
  );

  @override
  _i10.Future<_i14.QuerySnapshot<T>> namedQueryWithConverterGet<T>(
    String? name, {
    _i13.GetOptions? options = const _i13.GetOptions(),
    required _i14.FromFirestore<T>? fromFirestore,
    required _i14.ToFirestore<T>? toFirestore,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #namedQueryWithConverterGet,
              [name],
              {
                #options: options,
                #fromFirestore: fromFirestore,
                #toFirestore: toFirestore,
              },
            ),
            returnValue: _i10.Future<_i14.QuerySnapshot<T>>.value(
              _FakeQuerySnapshot_38<T>(
                this,
                Invocation.method(
                  #namedQueryWithConverterGet,
                  [name],
                  {
                    #options: options,
                    #fromFirestore: fromFirestore,
                    #toFirestore: toFirestore,
                  },
                ),
              ),
            ),
          )
          as _i10.Future<_i14.QuerySnapshot<T>>);

  @override
  _i10.Future<_i14.QuerySnapshot<Map<String, dynamic>>> namedQueryGet(
    String? name, {
    _i13.GetOptions? options = const _i13.GetOptions(),
  }) =>
      (super.noSuchMethod(
            Invocation.method(#namedQueryGet, [name], {#options: options}),
            returnValue:
                _i10.Future<_i14.QuerySnapshot<Map<String, dynamic>>>.value(
                  _FakeQuerySnapshot_38<Map<String, dynamic>>(
                    this,
                    Invocation.method(
                      #namedQueryGet,
                      [name],
                      {#options: options},
                    ),
                  ),
                ),
          )
          as _i10.Future<_i14.QuerySnapshot<Map<String, dynamic>>>);

  @override
  _i14.Query<Map<String, dynamic>> collectionGroup(String? collectionPath) =>
      (super.noSuchMethod(
            Invocation.method(#collectionGroup, [collectionPath]),
            returnValue: _FakeQuery_39<Map<String, dynamic>>(
              this,
              Invocation.method(#collectionGroup, [collectionPath]),
            ),
          )
          as _i14.Query<Map<String, dynamic>>);

  @override
  _i10.Future<void> disableNetwork() =>
      (super.noSuchMethod(
            Invocation.method(#disableNetwork, []),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i14.DocumentReference<Map<String, dynamic>> doc(String? documentPath) =>
      (super.noSuchMethod(
            Invocation.method(#doc, [documentPath]),
            returnValue: _FakeDocumentReference_40<Map<String, dynamic>>(
              this,
              Invocation.method(#doc, [documentPath]),
            ),
          )
          as _i14.DocumentReference<Map<String, dynamic>>);

  @override
  _i10.Future<void> enableNetwork() =>
      (super.noSuchMethod(
            Invocation.method(#enableNetwork, []),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Stream<void> snapshotsInSync() =>
      (super.noSuchMethod(
            Invocation.method(#snapshotsInSync, []),
            returnValue: _i10.Stream<void>.empty(),
          )
          as _i10.Stream<void>);

  @override
  _i10.Future<T> runTransaction<T>(
    _i14.TransactionHandler<T>? transactionHandler, {
    Duration? timeout = const Duration(seconds: 30),
    int? maxAttempts = 5,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #runTransaction,
              [transactionHandler],
              {#timeout: timeout, #maxAttempts: maxAttempts},
            ),
            returnValue:
                _i15.ifNotNull(
                  _i15.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #runTransaction,
                      [transactionHandler],
                      {#timeout: timeout, #maxAttempts: maxAttempts},
                    ),
                  ),
                  (T v) => _i10.Future<T>.value(v),
                ) ??
                _FakeFuture_22<T>(
                  this,
                  Invocation.method(
                    #runTransaction,
                    [transactionHandler],
                    {#timeout: timeout, #maxAttempts: maxAttempts},
                  ),
                ),
          )
          as _i10.Future<T>);

  @override
  _i10.Future<void> terminate() =>
      (super.noSuchMethod(
            Invocation.method(#terminate, []),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<void> waitForPendingWrites() =>
      (super.noSuchMethod(
            Invocation.method(#waitForPendingWrites, []),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<void> setIndexConfiguration({
    required List<_i13.Index>? indexes,
    List<_i13.FieldOverrides>? fieldOverrides,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#setIndexConfiguration, [], {
              #indexes: indexes,
              #fieldOverrides: fieldOverrides,
            }),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<void> setIndexConfigurationFromJSON(String? json) =>
      (super.noSuchMethod(
            Invocation.method(#setIndexConfigurationFromJSON, [json]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);
}

/// A class which mocks [CollectionReference].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockCollectionReference<T extends Object?> extends _i1.Mock
    implements _i14.CollectionReference<T> {
  MockCollectionReference() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get id =>
      (super.noSuchMethod(
            Invocation.getter(#id),
            returnValue: _i15.dummyValue<String>(this, Invocation.getter(#id)),
          )
          as String);

  @override
  String get path =>
      (super.noSuchMethod(
            Invocation.getter(#path),
            returnValue: _i15.dummyValue<String>(
              this,
              Invocation.getter(#path),
            ),
          )
          as String);

  @override
  _i14.FirebaseFirestore get firestore =>
      (super.noSuchMethod(
            Invocation.getter(#firestore),
            returnValue: _FakeFirebaseFirestore_41(
              this,
              Invocation.getter(#firestore),
            ),
          )
          as _i14.FirebaseFirestore);

  @override
  Map<String, dynamic> get parameters =>
      (super.noSuchMethod(
            Invocation.getter(#parameters),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  _i10.Future<_i14.DocumentReference<T>> add(T? data) =>
      (super.noSuchMethod(
            Invocation.method(#add, [data]),
            returnValue: _i10.Future<_i14.DocumentReference<T>>.value(
              _FakeDocumentReference_40<T>(
                this,
                Invocation.method(#add, [data]),
              ),
            ),
          )
          as _i10.Future<_i14.DocumentReference<T>>);

  @override
  _i14.DocumentReference<T> doc([String? path]) =>
      (super.noSuchMethod(
            Invocation.method(#doc, [path]),
            returnValue: _FakeDocumentReference_40<T>(
              this,
              Invocation.method(#doc, [path]),
            ),
          )
          as _i14.DocumentReference<T>);

  @override
  _i14.CollectionReference<R> withConverter<R extends Object?>({
    required _i14.FromFirestore<R>? fromFirestore,
    required _i14.ToFirestore<R>? toFirestore,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#withConverter, [], {
              #fromFirestore: fromFirestore,
              #toFirestore: toFirestore,
            }),
            returnValue: _FakeCollectionReference_35<R>(
              this,
              Invocation.method(#withConverter, [], {
                #fromFirestore: fromFirestore,
                #toFirestore: toFirestore,
              }),
            ),
          )
          as _i14.CollectionReference<R>);

  @override
  _i14.Query<T> endAtDocument(
    _i14.DocumentSnapshot<Object?>? documentSnapshot,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#endAtDocument, [documentSnapshot]),
            returnValue: _FakeQuery_39<T>(
              this,
              Invocation.method(#endAtDocument, [documentSnapshot]),
            ),
          )
          as _i14.Query<T>);

  @override
  _i14.Query<T> endAt(Iterable<Object?>? values) =>
      (super.noSuchMethod(
            Invocation.method(#endAt, [values]),
            returnValue: _FakeQuery_39<T>(
              this,
              Invocation.method(#endAt, [values]),
            ),
          )
          as _i14.Query<T>);

  @override
  _i14.Query<T> endBeforeDocument(
    _i14.DocumentSnapshot<Object?>? documentSnapshot,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#endBeforeDocument, [documentSnapshot]),
            returnValue: _FakeQuery_39<T>(
              this,
              Invocation.method(#endBeforeDocument, [documentSnapshot]),
            ),
          )
          as _i14.Query<T>);

  @override
  _i14.Query<T> endBefore(Iterable<Object?>? values) =>
      (super.noSuchMethod(
            Invocation.method(#endBefore, [values]),
            returnValue: _FakeQuery_39<T>(
              this,
              Invocation.method(#endBefore, [values]),
            ),
          )
          as _i14.Query<T>);

  @override
  _i10.Future<_i14.QuerySnapshot<T>> get([_i13.GetOptions? options]) =>
      (super.noSuchMethod(
            Invocation.method(#get, [options]),
            returnValue: _i10.Future<_i14.QuerySnapshot<T>>.value(
              _FakeQuerySnapshot_38<T>(
                this,
                Invocation.method(#get, [options]),
              ),
            ),
          )
          as _i10.Future<_i14.QuerySnapshot<T>>);

  @override
  _i14.Query<T> limit(int? limit) =>
      (super.noSuchMethod(
            Invocation.method(#limit, [limit]),
            returnValue: _FakeQuery_39<T>(
              this,
              Invocation.method(#limit, [limit]),
            ),
          )
          as _i14.Query<T>);

  @override
  _i14.Query<T> limitToLast(int? limit) =>
      (super.noSuchMethod(
            Invocation.method(#limitToLast, [limit]),
            returnValue: _FakeQuery_39<T>(
              this,
              Invocation.method(#limitToLast, [limit]),
            ),
          )
          as _i14.Query<T>);

  @override
  _i10.Stream<_i14.QuerySnapshot<T>> snapshots({
    bool? includeMetadataChanges = false,
    _i13.ListenSource? source = _i13.ListenSource.defaultSource,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#snapshots, [], {
              #includeMetadataChanges: includeMetadataChanges,
              #source: source,
            }),
            returnValue: _i10.Stream<_i14.QuerySnapshot<T>>.empty(),
          )
          as _i10.Stream<_i14.QuerySnapshot<T>>);

  @override
  _i14.Query<T> orderBy(Object? field, {bool? descending = false}) =>
      (super.noSuchMethod(
            Invocation.method(#orderBy, [field], {#descending: descending}),
            returnValue: _FakeQuery_39<T>(
              this,
              Invocation.method(#orderBy, [field], {#descending: descending}),
            ),
          )
          as _i14.Query<T>);

  @override
  _i14.Query<T> startAfterDocument(
    _i14.DocumentSnapshot<Object?>? documentSnapshot,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#startAfterDocument, [documentSnapshot]),
            returnValue: _FakeQuery_39<T>(
              this,
              Invocation.method(#startAfterDocument, [documentSnapshot]),
            ),
          )
          as _i14.Query<T>);

  @override
  _i14.Query<T> startAfter(Iterable<Object?>? values) =>
      (super.noSuchMethod(
            Invocation.method(#startAfter, [values]),
            returnValue: _FakeQuery_39<T>(
              this,
              Invocation.method(#startAfter, [values]),
            ),
          )
          as _i14.Query<T>);

  @override
  _i14.Query<T> startAtDocument(
    _i14.DocumentSnapshot<Object?>? documentSnapshot,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#startAtDocument, [documentSnapshot]),
            returnValue: _FakeQuery_39<T>(
              this,
              Invocation.method(#startAtDocument, [documentSnapshot]),
            ),
          )
          as _i14.Query<T>);

  @override
  _i14.Query<T> startAt(Iterable<Object?>? values) =>
      (super.noSuchMethod(
            Invocation.method(#startAt, [values]),
            returnValue: _FakeQuery_39<T>(
              this,
              Invocation.method(#startAt, [values]),
            ),
          )
          as _i14.Query<T>);

  @override
  _i14.Query<T> where(
    Object? field, {
    Object? isEqualTo,
    Object? isNotEqualTo,
    Object? isLessThan,
    Object? isLessThanOrEqualTo,
    Object? isGreaterThan,
    Object? isGreaterThanOrEqualTo,
    Object? arrayContains,
    Iterable<Object?>? arrayContainsAny,
    Iterable<Object?>? whereIn,
    Iterable<Object?>? whereNotIn,
    bool? isNull,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #where,
              [field],
              {
                #isEqualTo: isEqualTo,
                #isNotEqualTo: isNotEqualTo,
                #isLessThan: isLessThan,
                #isLessThanOrEqualTo: isLessThanOrEqualTo,
                #isGreaterThan: isGreaterThan,
                #isGreaterThanOrEqualTo: isGreaterThanOrEqualTo,
                #arrayContains: arrayContains,
                #arrayContainsAny: arrayContainsAny,
                #whereIn: whereIn,
                #whereNotIn: whereNotIn,
                #isNull: isNull,
              },
            ),
            returnValue: _FakeQuery_39<T>(
              this,
              Invocation.method(
                #where,
                [field],
                {
                  #isEqualTo: isEqualTo,
                  #isNotEqualTo: isNotEqualTo,
                  #isLessThan: isLessThan,
                  #isLessThanOrEqualTo: isLessThanOrEqualTo,
                  #isGreaterThan: isGreaterThan,
                  #isGreaterThanOrEqualTo: isGreaterThanOrEqualTo,
                  #arrayContains: arrayContains,
                  #arrayContainsAny: arrayContainsAny,
                  #whereIn: whereIn,
                  #whereNotIn: whereNotIn,
                  #isNull: isNull,
                },
              ),
            ),
          )
          as _i14.Query<T>);

  @override
  _i14.AggregateQuery count() =>
      (super.noSuchMethod(
            Invocation.method(#count, []),
            returnValue: _FakeAggregateQuery_42(
              this,
              Invocation.method(#count, []),
            ),
          )
          as _i14.AggregateQuery);

  @override
  _i14.AggregateQuery aggregate(
    _i13.AggregateField? aggregateField1, [
    _i13.AggregateField? aggregateField2,
    _i13.AggregateField? aggregateField3,
    _i13.AggregateField? aggregateField4,
    _i13.AggregateField? aggregateField5,
    _i13.AggregateField? aggregateField6,
    _i13.AggregateField? aggregateField7,
    _i13.AggregateField? aggregateField8,
    _i13.AggregateField? aggregateField9,
    _i13.AggregateField? aggregateField10,
    _i13.AggregateField? aggregateField11,
    _i13.AggregateField? aggregateField12,
    _i13.AggregateField? aggregateField13,
    _i13.AggregateField? aggregateField14,
    _i13.AggregateField? aggregateField15,
    _i13.AggregateField? aggregateField16,
    _i13.AggregateField? aggregateField17,
    _i13.AggregateField? aggregateField18,
    _i13.AggregateField? aggregateField19,
    _i13.AggregateField? aggregateField20,
    _i13.AggregateField? aggregateField21,
    _i13.AggregateField? aggregateField22,
    _i13.AggregateField? aggregateField23,
    _i13.AggregateField? aggregateField24,
    _i13.AggregateField? aggregateField25,
    _i13.AggregateField? aggregateField26,
    _i13.AggregateField? aggregateField27,
    _i13.AggregateField? aggregateField28,
    _i13.AggregateField? aggregateField29,
    _i13.AggregateField? aggregateField30,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#aggregate, [
              aggregateField1,
              aggregateField2,
              aggregateField3,
              aggregateField4,
              aggregateField5,
              aggregateField6,
              aggregateField7,
              aggregateField8,
              aggregateField9,
              aggregateField10,
              aggregateField11,
              aggregateField12,
              aggregateField13,
              aggregateField14,
              aggregateField15,
              aggregateField16,
              aggregateField17,
              aggregateField18,
              aggregateField19,
              aggregateField20,
              aggregateField21,
              aggregateField22,
              aggregateField23,
              aggregateField24,
              aggregateField25,
              aggregateField26,
              aggregateField27,
              aggregateField28,
              aggregateField29,
              aggregateField30,
            ]),
            returnValue: _FakeAggregateQuery_42(
              this,
              Invocation.method(#aggregate, [
                aggregateField1,
                aggregateField2,
                aggregateField3,
                aggregateField4,
                aggregateField5,
                aggregateField6,
                aggregateField7,
                aggregateField8,
                aggregateField9,
                aggregateField10,
                aggregateField11,
                aggregateField12,
                aggregateField13,
                aggregateField14,
                aggregateField15,
                aggregateField16,
                aggregateField17,
                aggregateField18,
                aggregateField19,
                aggregateField20,
                aggregateField21,
                aggregateField22,
                aggregateField23,
                aggregateField24,
                aggregateField25,
                aggregateField26,
                aggregateField27,
                aggregateField28,
                aggregateField29,
                aggregateField30,
              ]),
            ),
          )
          as _i14.AggregateQuery);
}

/// A class which mocks [DocumentReference].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockDocumentReference<T extends Object?> extends _i1.Mock
    implements _i14.DocumentReference<T> {
  MockDocumentReference() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i14.FirebaseFirestore get firestore =>
      (super.noSuchMethod(
            Invocation.getter(#firestore),
            returnValue: _FakeFirebaseFirestore_41(
              this,
              Invocation.getter(#firestore),
            ),
          )
          as _i14.FirebaseFirestore);

  @override
  String get id =>
      (super.noSuchMethod(
            Invocation.getter(#id),
            returnValue: _i15.dummyValue<String>(this, Invocation.getter(#id)),
          )
          as String);

  @override
  _i14.CollectionReference<T> get parent =>
      (super.noSuchMethod(
            Invocation.getter(#parent),
            returnValue: _FakeCollectionReference_35<T>(
              this,
              Invocation.getter(#parent),
            ),
          )
          as _i14.CollectionReference<T>);

  @override
  String get path =>
      (super.noSuchMethod(
            Invocation.getter(#path),
            returnValue: _i15.dummyValue<String>(
              this,
              Invocation.getter(#path),
            ),
          )
          as String);

  @override
  _i14.CollectionReference<Map<String, dynamic>> collection(
    String? collectionPath,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#collection, [collectionPath]),
            returnValue: _FakeCollectionReference_35<Map<String, dynamic>>(
              this,
              Invocation.method(#collection, [collectionPath]),
            ),
          )
          as _i14.CollectionReference<Map<String, dynamic>>);

  @override
  _i10.Future<void> delete() =>
      (super.noSuchMethod(
            Invocation.method(#delete, []),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<void> update(Map<Object, Object?>? data) =>
      (super.noSuchMethod(
            Invocation.method(#update, [data]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i10.Future<_i14.DocumentSnapshot<T>> get([_i13.GetOptions? options]) =>
      (super.noSuchMethod(
            Invocation.method(#get, [options]),
            returnValue: _i10.Future<_i14.DocumentSnapshot<T>>.value(
              _FakeDocumentSnapshot_43<T>(
                this,
                Invocation.method(#get, [options]),
              ),
            ),
          )
          as _i10.Future<_i14.DocumentSnapshot<T>>);

  @override
  _i10.Stream<_i14.DocumentSnapshot<T>> snapshots({
    bool? includeMetadataChanges = false,
    _i13.ListenSource? source = _i13.ListenSource.defaultSource,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#snapshots, [], {
              #includeMetadataChanges: includeMetadataChanges,
              #source: source,
            }),
            returnValue: _i10.Stream<_i14.DocumentSnapshot<T>>.empty(),
          )
          as _i10.Stream<_i14.DocumentSnapshot<T>>);

  @override
  _i10.Future<void> set(T? data, [_i13.SetOptions? options]) =>
      (super.noSuchMethod(
            Invocation.method(#set, [data, options]),
            returnValue: _i10.Future<void>.value(),
            returnValueForMissingStub: _i10.Future<void>.value(),
          )
          as _i10.Future<void>);

  @override
  _i14.DocumentReference<R> withConverter<R>({
    required _i14.FromFirestore<R>? fromFirestore,
    required _i14.ToFirestore<R>? toFirestore,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#withConverter, [], {
              #fromFirestore: fromFirestore,
              #toFirestore: toFirestore,
            }),
            returnValue: _FakeDocumentReference_40<R>(
              this,
              Invocation.method(#withConverter, [], {
                #fromFirestore: fromFirestore,
                #toFirestore: toFirestore,
              }),
            ),
          )
          as _i14.DocumentReference<R>);
}

/// A class which mocks [DocumentSnapshot].
///
/// See the documentation for Mockito's code generation for more information.
class MockDocumentSnapshot<T extends Object?> extends _i1.Mock
    implements _i14.DocumentSnapshot<T> {
  MockDocumentSnapshot() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get id =>
      (super.noSuchMethod(
            Invocation.getter(#id),
            returnValue: _i15.dummyValue<String>(this, Invocation.getter(#id)),
          )
          as String);

  @override
  _i14.DocumentReference<T> get reference =>
      (super.noSuchMethod(
            Invocation.getter(#reference),
            returnValue: _FakeDocumentReference_40<T>(
              this,
              Invocation.getter(#reference),
            ),
          )
          as _i14.DocumentReference<T>);

  @override
  _i14.SnapshotMetadata get metadata =>
      (super.noSuchMethod(
            Invocation.getter(#metadata),
            returnValue: _FakeSnapshotMetadata_44(
              this,
              Invocation.getter(#metadata),
            ),
          )
          as _i14.SnapshotMetadata);

  @override
  bool get exists =>
      (super.noSuchMethod(Invocation.getter(#exists), returnValue: false)
          as bool);

  @override
  dynamic get(Object? field) =>
      super.noSuchMethod(Invocation.method(#get, [field]));

  @override
  dynamic operator [](Object? field) =>
      super.noSuchMethod(Invocation.method(#[], [field]));
}

/// A class which mocks [FirestoreExpenseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirestoreExpenseService extends _i1.Mock
    implements _i22.FirestoreExpenseService {
  @override
  _i11.AppLogger get log =>
      (super.noSuchMethod(
            Invocation.getter(#log),
            returnValue: _FakeAppLogger_32(this, Invocation.getter(#log)),
            returnValueForMissingStub: _FakeAppLogger_32(
              this,
              Invocation.getter(#log),
            ),
          )
          as _i11.AppLogger);

  @override
  _i10.Future<_i23.ResultDart<void, Exception>> uploadExpense(
    _i16.ExpenseEntity? expense,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#uploadExpense, [expense]),
            returnValue: _i10.Future<_i23.ResultDart<void, Exception>>.value(
              _i15.dummyValue<_i23.ResultDart<void, Exception>>(
                this,
                Invocation.method(#uploadExpense, [expense]),
              ),
            ),
            returnValueForMissingStub:
                _i10.Future<_i23.ResultDart<void, Exception>>.value(
                  _i15.dummyValue<_i23.ResultDart<void, Exception>>(
                    this,
                    Invocation.method(#uploadExpense, [expense]),
                  ),
                ),
          )
          as _i10.Future<_i23.ResultDart<void, Exception>>);

  @override
  _i10.Future<_i23.ResultDart<void, Exception>> uploadExpenseShare(
    _i20.ExpenseShareEntity? share,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#uploadExpenseShare, [share]),
            returnValue: _i10.Future<_i23.ResultDart<void, Exception>>.value(
              _i15.dummyValue<_i23.ResultDart<void, Exception>>(
                this,
                Invocation.method(#uploadExpenseShare, [share]),
              ),
            ),
            returnValueForMissingStub:
                _i10.Future<_i23.ResultDart<void, Exception>>.value(
                  _i15.dummyValue<_i23.ResultDart<void, Exception>>(
                    this,
                    Invocation.method(#uploadExpenseShare, [share]),
                  ),
                ),
          )
          as _i10.Future<_i23.ResultDart<void, Exception>>);

  @override
  _i10.Future<_i23.ResultDart<_i16.ExpenseEntity, Exception>> downloadExpense(
    String? groupId,
    String? expenseId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#downloadExpense, [groupId, expenseId]),
            returnValue:
                _i10.Future<
                  _i23.ResultDart<_i16.ExpenseEntity, Exception>
                >.value(
                  _i15.dummyValue<
                    _i23.ResultDart<_i16.ExpenseEntity, Exception>
                  >(
                    this,
                    Invocation.method(#downloadExpense, [groupId, expenseId]),
                  ),
                ),
            returnValueForMissingStub:
                _i10.Future<
                  _i23.ResultDart<_i16.ExpenseEntity, Exception>
                >.value(
                  _i15.dummyValue<
                    _i23.ResultDart<_i16.ExpenseEntity, Exception>
                  >(
                    this,
                    Invocation.method(#downloadExpense, [groupId, expenseId]),
                  ),
                ),
          )
          as _i10.Future<_i23.ResultDart<_i16.ExpenseEntity, Exception>>);

  @override
  _i10.Future<_i23.ResultDart<List<_i16.ExpenseEntity>, Exception>>
  downloadGroupExpenses(String? groupId) =>
      (super.noSuchMethod(
            Invocation.method(#downloadGroupExpenses, [groupId]),
            returnValue:
                _i10.Future<
                  _i23.ResultDart<List<_i16.ExpenseEntity>, Exception>
                >.value(
                  _i15.dummyValue<
                    _i23.ResultDart<List<_i16.ExpenseEntity>, Exception>
                  >(this, Invocation.method(#downloadGroupExpenses, [groupId])),
                ),
            returnValueForMissingStub:
                _i10.Future<
                  _i23.ResultDart<List<_i16.ExpenseEntity>, Exception>
                >.value(
                  _i15.dummyValue<
                    _i23.ResultDart<List<_i16.ExpenseEntity>, Exception>
                  >(this, Invocation.method(#downloadGroupExpenses, [groupId])),
                ),
          )
          as _i10.Future<_i23.ResultDart<List<_i16.ExpenseEntity>, Exception>>);

  @override
  _i10.Future<_i23.ResultDart<List<_i20.ExpenseShareEntity>, Exception>>
  downloadExpenseShares(String? groupId, String? expenseId) =>
      (super.noSuchMethod(
            Invocation.method(#downloadExpenseShares, [groupId, expenseId]),
            returnValue:
                _i10.Future<
                  _i23.ResultDart<List<_i20.ExpenseShareEntity>, Exception>
                >.value(
                  _i15.dummyValue<
                    _i23.ResultDart<List<_i20.ExpenseShareEntity>, Exception>
                  >(
                    this,
                    Invocation.method(#downloadExpenseShares, [
                      groupId,
                      expenseId,
                    ]),
                  ),
                ),
            returnValueForMissingStub:
                _i10.Future<
                  _i23.ResultDart<List<_i20.ExpenseShareEntity>, Exception>
                >.value(
                  _i15.dummyValue<
                    _i23.ResultDart<List<_i20.ExpenseShareEntity>, Exception>
                  >(
                    this,
                    Invocation.method(#downloadExpenseShares, [
                      groupId,
                      expenseId,
                    ]),
                  ),
                ),
          )
          as _i10.Future<
            _i23.ResultDart<List<_i20.ExpenseShareEntity>, Exception>
          >);

  @override
  _i10.Future<_i23.ResultDart<void, Exception>> deleteExpense(
    String? groupId,
    String? expenseId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#deleteExpense, [groupId, expenseId]),
            returnValue: _i10.Future<_i23.ResultDart<void, Exception>>.value(
              _i15.dummyValue<_i23.ResultDart<void, Exception>>(
                this,
                Invocation.method(#deleteExpense, [groupId, expenseId]),
              ),
            ),
            returnValueForMissingStub:
                _i10.Future<_i23.ResultDart<void, Exception>>.value(
                  _i15.dummyValue<_i23.ResultDart<void, Exception>>(
                    this,
                    Invocation.method(#deleteExpense, [groupId, expenseId]),
                  ),
                ),
          )
          as _i10.Future<_i23.ResultDart<void, Exception>>);

  @override
  _i10.Stream<List<_i16.ExpenseEntity>> watchGroupExpenses(String? groupId) =>
      (super.noSuchMethod(
            Invocation.method(#watchGroupExpenses, [groupId]),
            returnValue: _i10.Stream<List<_i16.ExpenseEntity>>.empty(),
            returnValueForMissingStub:
                _i10.Stream<List<_i16.ExpenseEntity>>.empty(),
          )
          as _i10.Stream<List<_i16.ExpenseEntity>>);

  @override
  _i10.Stream<_i16.ExpenseEntity> watchExpense(
    String? groupId,
    String? expenseId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#watchExpense, [groupId, expenseId]),
            returnValue: _i10.Stream<_i16.ExpenseEntity>.empty(),
            returnValueForMissingStub: _i10.Stream<_i16.ExpenseEntity>.empty(),
          )
          as _i10.Stream<_i16.ExpenseEntity>);

  @override
  _i10.Stream<List<_i20.ExpenseShareEntity>> watchExpenseShares(
    String? groupId,
    String? expenseId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#watchExpenseShares, [groupId, expenseId]),
            returnValue: _i10.Stream<List<_i20.ExpenseShareEntity>>.empty(),
            returnValueForMissingStub:
                _i10.Stream<List<_i20.ExpenseShareEntity>>.empty(),
          )
          as _i10.Stream<List<_i20.ExpenseShareEntity>>);
}

/// A class which mocks [FirestoreGroupService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirestoreGroupService extends _i1.Mock
    implements _i24.FirestoreGroupService {
  @override
  _i11.AppLogger get log =>
      (super.noSuchMethod(
            Invocation.getter(#log),
            returnValue: _FakeAppLogger_32(this, Invocation.getter(#log)),
            returnValueForMissingStub: _FakeAppLogger_32(
              this,
              Invocation.getter(#log),
            ),
          )
          as _i11.AppLogger);

  @override
  _i10.Future<_i23.ResultDart<void, Exception>> uploadGroup(
    _i18.GroupEntity? group,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#uploadGroup, [group]),
            returnValue: _i10.Future<_i23.ResultDart<void, Exception>>.value(
              _i15.dummyValue<_i23.ResultDart<void, Exception>>(
                this,
                Invocation.method(#uploadGroup, [group]),
              ),
            ),
            returnValueForMissingStub:
                _i10.Future<_i23.ResultDart<void, Exception>>.value(
                  _i15.dummyValue<_i23.ResultDart<void, Exception>>(
                    this,
                    Invocation.method(#uploadGroup, [group]),
                  ),
                ),
          )
          as _i10.Future<_i23.ResultDart<void, Exception>>);

  @override
  _i10.Future<_i23.ResultDart<void, Exception>> uploadGroupMember(
    _i19.GroupMemberEntity? member, {
    bool? isPersonalGroup = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #uploadGroupMember,
              [member],
              {#isPersonalGroup: isPersonalGroup},
            ),
            returnValue: _i10.Future<_i23.ResultDart<void, Exception>>.value(
              _i15.dummyValue<_i23.ResultDart<void, Exception>>(
                this,
                Invocation.method(
                  #uploadGroupMember,
                  [member],
                  {#isPersonalGroup: isPersonalGroup},
                ),
              ),
            ),
            returnValueForMissingStub:
                _i10.Future<_i23.ResultDart<void, Exception>>.value(
                  _i15.dummyValue<_i23.ResultDart<void, Exception>>(
                    this,
                    Invocation.method(
                      #uploadGroupMember,
                      [member],
                      {#isPersonalGroup: isPersonalGroup},
                    ),
                  ),
                ),
          )
          as _i10.Future<_i23.ResultDart<void, Exception>>);

  @override
  _i10.Future<_i23.ResultDart<_i18.GroupEntity, Exception>> downloadGroup(
    String? groupId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#downloadGroup, [groupId]),
            returnValue:
                _i10.Future<_i23.ResultDart<_i18.GroupEntity, Exception>>.value(
                  _i15.dummyValue<_i23.ResultDart<_i18.GroupEntity, Exception>>(
                    this,
                    Invocation.method(#downloadGroup, [groupId]),
                  ),
                ),
            returnValueForMissingStub:
                _i10.Future<_i23.ResultDart<_i18.GroupEntity, Exception>>.value(
                  _i15.dummyValue<_i23.ResultDart<_i18.GroupEntity, Exception>>(
                    this,
                    Invocation.method(#downloadGroup, [groupId]),
                  ),
                ),
          )
          as _i10.Future<_i23.ResultDart<_i18.GroupEntity, Exception>>);

  @override
  _i10.Future<_i23.ResultDart<List<_i18.GroupEntity>, Exception>>
  downloadUserGroups(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#downloadUserGroups, [userId]),
            returnValue:
                _i10.Future<
                  _i23.ResultDart<List<_i18.GroupEntity>, Exception>
                >.value(
                  _i15.dummyValue<
                    _i23.ResultDart<List<_i18.GroupEntity>, Exception>
                  >(this, Invocation.method(#downloadUserGroups, [userId])),
                ),
            returnValueForMissingStub:
                _i10.Future<
                  _i23.ResultDart<List<_i18.GroupEntity>, Exception>
                >.value(
                  _i15.dummyValue<
                    _i23.ResultDart<List<_i18.GroupEntity>, Exception>
                  >(this, Invocation.method(#downloadUserGroups, [userId])),
                ),
          )
          as _i10.Future<_i23.ResultDart<List<_i18.GroupEntity>, Exception>>);

  @override
  _i10.Future<_i23.ResultDart<List<_i19.GroupMemberEntity>, Exception>>
  downloadGroupMembers(String? groupId) =>
      (super.noSuchMethod(
            Invocation.method(#downloadGroupMembers, [groupId]),
            returnValue:
                _i10.Future<
                  _i23.ResultDart<List<_i19.GroupMemberEntity>, Exception>
                >.value(
                  _i15.dummyValue<
                    _i23.ResultDart<List<_i19.GroupMemberEntity>, Exception>
                  >(this, Invocation.method(#downloadGroupMembers, [groupId])),
                ),
            returnValueForMissingStub:
                _i10.Future<
                  _i23.ResultDart<List<_i19.GroupMemberEntity>, Exception>
                >.value(
                  _i15.dummyValue<
                    _i23.ResultDart<List<_i19.GroupMemberEntity>, Exception>
                  >(this, Invocation.method(#downloadGroupMembers, [groupId])),
                ),
          )
          as _i10.Future<
            _i23.ResultDart<List<_i19.GroupMemberEntity>, Exception>
          >);

  @override
  _i10.Future<_i23.ResultDart<void, Exception>> deleteGroup(String? groupId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteGroup, [groupId]),
            returnValue: _i10.Future<_i23.ResultDart<void, Exception>>.value(
              _i15.dummyValue<_i23.ResultDart<void, Exception>>(
                this,
                Invocation.method(#deleteGroup, [groupId]),
              ),
            ),
            returnValueForMissingStub:
                _i10.Future<_i23.ResultDart<void, Exception>>.value(
                  _i15.dummyValue<_i23.ResultDart<void, Exception>>(
                    this,
                    Invocation.method(#deleteGroup, [groupId]),
                  ),
                ),
          )
          as _i10.Future<_i23.ResultDart<void, Exception>>);

  @override
  _i10.Future<_i23.ResultDart<void, Exception>> removeGroupMember(
    String? groupId,
    String? userId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#removeGroupMember, [groupId, userId]),
            returnValue: _i10.Future<_i23.ResultDart<void, Exception>>.value(
              _i15.dummyValue<_i23.ResultDart<void, Exception>>(
                this,
                Invocation.method(#removeGroupMember, [groupId, userId]),
              ),
            ),
            returnValueForMissingStub:
                _i10.Future<_i23.ResultDart<void, Exception>>.value(
                  _i15.dummyValue<_i23.ResultDart<void, Exception>>(
                    this,
                    Invocation.method(#removeGroupMember, [groupId, userId]),
                  ),
                ),
          )
          as _i10.Future<_i23.ResultDart<void, Exception>>);

  @override
  _i10.Stream<_i18.GroupEntity> watchGroup(String? groupId) =>
      (super.noSuchMethod(
            Invocation.method(#watchGroup, [groupId]),
            returnValue: _i10.Stream<_i18.GroupEntity>.empty(),
            returnValueForMissingStub: _i10.Stream<_i18.GroupEntity>.empty(),
          )
          as _i10.Stream<_i18.GroupEntity>);

  @override
  _i10.Stream<List<_i18.GroupEntity>> watchUserGroups(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#watchUserGroups, [userId]),
            returnValue: _i10.Stream<List<_i18.GroupEntity>>.empty(),
            returnValueForMissingStub:
                _i10.Stream<List<_i18.GroupEntity>>.empty(),
          )
          as _i10.Stream<List<_i18.GroupEntity>>);
}
